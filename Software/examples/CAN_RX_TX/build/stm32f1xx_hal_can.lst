ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c"
  18              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  19              		.align	1
  20              		.weak	HAL_CAN_MspInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_CAN_MspInit:
  26              	.LVL0:
  27              	.LFB67:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @file    stm32f1xx_hal_can.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @attention
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 2


  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           functions:
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           messages.
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           can be used:
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  message.
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  message.
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       ==============================
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Then request transmission of a message using
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 3


  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       ================================
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           here.
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       ==================
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           be completed.
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   =============================================
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 4


 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   weak function.
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   or HAL_CAN_Init() function.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 5


 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #include "stm32f1xx_hal.h"
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup STM32F1xx_HAL_Driver
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 6


 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan == NULL)
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 7


 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request initialisation */
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait initialisation acknowledge */
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Update error code */
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Change CAN state */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_ERROR;
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Exit from sleep mode */
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Update error code */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Change CAN state */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_ERROR;
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 8


 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the time triggered communication mode */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the automatic bus-off management */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the automatic wake-up mode */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the automatic retransmission */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the transmit FIFO priority */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 9


 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the bit timing register */
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the error code */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the CAN state */
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         reset values.
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan == NULL)
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Stop the CAN module */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Reset the CAN peripheral */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 10


 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  28              		.loc 1 507 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  33              		.loc 1 509 3 view .LVU1
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  34              		.loc 1 514 1 is_stmt 0 view .LVU2
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE67:
  39              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
  40              		.align	1
  41              		.weak	HAL_CAN_MspDeInit
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HAL_CAN_MspDeInit:
  47              	.LVL1:
  48              	.LFB68:
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  49              		.loc 1 523 1 is_stmt 1 view -0
  50              		.cfi_startproc
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 11


  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  54              		.loc 1 525 3 view .LVU4
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  55              		.loc 1 530 1 is_stmt 0 view .LVU5
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE68:
  60              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
  61              		.align	1
  62              		.weak	HAL_CAN_TxMailbox0CompleteCallback
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	HAL_CAN_TxMailbox0CompleteCallback:
  68              	.LVL2:
  69              	.LFB87:
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for CAN module
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be one of the following values:
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pCallback == NULL)
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 12


 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update the error code */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 13


 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update the error code */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return error status */
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     status =  HAL_ERROR;
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 14


 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for CAN module
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be one of the following values:
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 15


 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 16


 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update the error code */
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return error status */
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     status =  HAL_ERROR;
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Configuration functions.
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Configuration functions #####
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         contains the filter configuration information.
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos;
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the parameters */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 17


 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if   defined(CAN2)
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select master instance to access the filter banks */
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     can_ip = CAN1;
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the parameters */
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the parameters */
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialisation mode for the filter */
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if   defined(CAN2)
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Convert filter number into bit position */
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter Deactivation */
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter Scale */
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 16-bit scale for the filter */
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 18


 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 32-bit scale for the filter */
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter Mode */
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Identifier list mode for the filter*/
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter FIFO assignment */
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter activation */
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 19


 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Control functions
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                       ##### Control functions #####
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                              and activate the corresponding
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                              transmission request
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                              pending on the selected Tx mailbox
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Start the CAN module.
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN peripheral state */
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request leave initialisation */
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 20


1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Change CAN state */
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request initialisation */
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 21


1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Change CAN state */
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Exit from sleep mode */
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN peripheral state */
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         of a CAN frame) has been completed.
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request Sleep mode */
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 22


1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         is exited.
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __IO uint32_t count = 0;
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timeout = 1000000U;
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wake up request */
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait sleep mode is exited */
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     do
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Increment counter */
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       count++;
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check if timeout is reached */
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (count > timeout)
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Status
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 1 : Sleep mode is active.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 23


1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Sleep mode */
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = 1U;
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         corresponding transmission request.
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 24


1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Select an empty transmit mailbox */
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Store the Tx mailbox */
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the Id */
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the DLC */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the data field */
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Request transmission */
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Return function status */
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_OK;
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Update error code */
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_ERROR;
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 25


1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Abort transmission requests
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 26


1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t freelevel = 0U;
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       freelevel++;
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       freelevel++;
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       freelevel++;
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return freelevel;
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         Mailboxes.
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Status
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *                Tx Mailbox.
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 27


1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = 1U;
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return status */
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             mode is enabled.
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         read.
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timestamp = 0U;
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select the Tx mailbox */
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get timestamp */
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return the timestamp */
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return timestamp;
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 28


1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         of the Rx frame will be stored.
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the Rx FIFO */
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get the header */
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       pHeader->DLC = 8U;
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 29


1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get the data */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release the FIFO */
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Release RX FIFO 0 */
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Release RX FIFO 1 */
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filllevel = 0U;
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 30


1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return Rx FIFO fill level */
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return filllevel;
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Interrupts management
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                        ##### Interrupts management #####
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Enable interrupts.
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable the selected interrupts */
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 31


1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Disable interrupts.
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable the selected interrupts */
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 32


1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call registered callback*/
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call weak (surcharged) callback */
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call registered callback*/
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call weak (surcharged) callback */
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 33


1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call registered callback*/
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call weak (surcharged) callback */
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call registered callback*/
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call weak (surcharged) callback */
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call registered callback*/
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call weak (surcharged) callback */
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 34


1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call registered callback*/
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call weak (surcharged) callback */
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 35


1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check if message is still pending */
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check if message is still pending */
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 36


1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Sleep Callback */
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->SleepCallback(hcan);
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear WakeUp Flag */
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* WakeUp Callback */
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Error interrupts management *********************************************/
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Error Warning Flag */
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 37


1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Error Passive Flag */
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to Error Passive */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Bus-off Flag */
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Last Error Code Flag */
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Form error */
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to CRC error */
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           default:
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 38


2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Clear Last error code Flag */
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear ERRI Flag */
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code in handle */
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call Error callback function */
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call registered callback*/
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call weak (surcharged) callback */
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief   CAN Callback functions
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                           ##### Callback functions #####
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides the following callback functions:
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 39


2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  70              		.loc 1 2110 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  75              		.loc 1 2112 3 view .LVU7
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  76              		.loc 1 2118 1 is_stmt 0 view .LVU8
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE87:
  81              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
  82              		.align	1
  83              		.weak	HAL_CAN_TxMailbox1CompleteCallback
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	HAL_CAN_TxMailbox1CompleteCallback:
  89              	.LVL3:
  90              	.LFB88:
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  91              		.loc 1 2127 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  96              		.loc 1 2129 3 view .LVU10
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 40


2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  97              		.loc 1 2135 1 is_stmt 0 view .LVU11
  98 0000 7047     		bx	lr
  99              		.cfi_endproc
 100              	.LFE88:
 102              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 103              		.align	1
 104              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	HAL_CAN_TxMailbox2CompleteCallback:
 110              	.LVL4:
 111              	.LFB89:
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 112              		.loc 1 2144 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 117              		.loc 1 2146 3 view .LVU13
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 118              		.loc 1 2152 1 is_stmt 0 view .LVU14
 119 0000 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE89:
 123              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 124              		.align	1
 125              		.weak	HAL_CAN_TxMailbox0AbortCallback
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	HAL_CAN_TxMailbox0AbortCallback:
 131              	.LVL5:
 132              	.LFB90:
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 41


2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 133              		.loc 1 2161 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 138              		.loc 1 2163 3 view .LVU16
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 139              		.loc 1 2169 1 is_stmt 0 view .LVU17
 140 0000 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE90:
 144              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 145              		.align	1
 146              		.weak	HAL_CAN_TxMailbox1AbortCallback
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	HAL_CAN_TxMailbox1AbortCallback:
 152              	.LVL6:
 153              	.LFB91:
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 154              		.loc 1 2178 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 159              		.loc 1 2180 3 view .LVU19
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 160              		.loc 1 2186 1 is_stmt 0 view .LVU20
 161 0000 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE91:
 165              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 42


 166              		.align	1
 167              		.weak	HAL_CAN_TxMailbox2AbortCallback
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	HAL_CAN_TxMailbox2AbortCallback:
 173              	.LVL7:
 174              	.LFB92:
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 175              		.loc 1 2195 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 180              		.loc 1 2197 3 view .LVU22
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 181              		.loc 1 2203 1 is_stmt 0 view .LVU23
 182 0000 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE92:
 186              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 187              		.align	1
 188              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	HAL_CAN_RxFifo0MsgPendingCallback:
 194              	.LVL8:
 195              	.LFB93:
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 196              		.loc 1 2212 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 43


 200              		@ link register save eliminated.
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 201              		.loc 1 2214 3 view .LVU25
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 202              		.loc 1 2220 1 is_stmt 0 view .LVU26
 203 0000 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE93:
 207              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 208              		.align	1
 209              		.weak	HAL_CAN_RxFifo0FullCallback
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	HAL_CAN_RxFifo0FullCallback:
 215              	.LVL9:
 216              	.LFB94:
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 217              		.loc 1 2229 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 222              		.loc 1 2231 3 view .LVU28
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             file
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 223              		.loc 1 2237 1 is_stmt 0 view .LVU29
 224 0000 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE94:
 228              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 229              		.align	1
 230              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	HAL_CAN_RxFifo1MsgPendingCallback:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 44


 236              	.LVL10:
 237              	.LFB95:
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 238              		.loc 1 2246 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 243              		.loc 1 2248 3 view .LVU31
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 244              		.loc 1 2254 1 is_stmt 0 view .LVU32
 245 0000 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE95:
 249              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 250              		.align	1
 251              		.weak	HAL_CAN_RxFifo1FullCallback
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	HAL_CAN_RxFifo1FullCallback:
 257              	.LVL11:
 258              	.LFB96:
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 259              		.loc 1 2263 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 264              		.loc 1 2265 3 view .LVU34
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 45


2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             file
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 265              		.loc 1 2271 1 is_stmt 0 view .LVU35
 266 0000 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE96:
 270              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 271              		.align	1
 272              		.weak	HAL_CAN_SleepCallback
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	HAL_CAN_SleepCallback:
 278              	.LVL12:
 279              	.LFB97:
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Sleep callback.
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 280              		.loc 1 2280 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 285              		.loc 1 2282 3 view .LVU37
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 286              		.loc 1 2287 1 is_stmt 0 view .LVU38
 287 0000 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE97:
 291              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 292              		.align	1
 293              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 298              	HAL_CAN_WakeUpFromRxMsgCallback:
 299              	.LVL13:
 300              	.LFB98:
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 46


2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 301              		.loc 1 2296 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 306              		.loc 1 2298 3 view .LVU40
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 307              		.loc 1 2304 1 is_stmt 0 view .LVU41
 308 0000 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE98:
 312              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 313              		.align	1
 314              		.weak	HAL_CAN_ErrorCallback
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	HAL_CAN_ErrorCallback:
 320              	.LVL14:
 321              	.LFB99:
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Error CAN callback.
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 322              		.loc 1 2313 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 327              		.loc 1 2315 3 view .LVU43
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 328              		.loc 1 2320 1 is_stmt 0 view .LVU44
 329 0000 7047     		bx	lr
 330              		.cfi_endproc
 331              	.LFE99:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 47


 333              		.section	.text.HAL_CAN_Init,"ax",%progbits
 334              		.align	1
 335              		.global	HAL_CAN_Init
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	HAL_CAN_Init:
 341              	.LVL15:
 342              	.LFB65:
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 343              		.loc 1 275 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 347              		.loc 1 276 3 view .LVU46
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 348              		.loc 1 279 3 view .LVU47
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 349              		.loc 1 279 6 is_stmt 0 view .LVU48
 350 0000 0028     		cmp	r0, #0
 351 0002 00F0C080 		beq	.L36
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 352              		.loc 1 275 1 view .LVU49
 353 0006 38B5     		push	{r3, r4, r5, lr}
 354              	.LCFI0:
 355              		.cfi_def_cfa_offset 16
 356              		.cfi_offset 3, -16
 357              		.cfi_offset 4, -12
 358              		.cfi_offset 5, -8
 359              		.cfi_offset 14, -4
 360 0008 0446     		mov	r4, r0
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 361              		.loc 1 285 3 is_stmt 1 view .LVU50
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 362              		.loc 1 286 3 view .LVU51
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 363              		.loc 1 287 3 view .LVU52
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 364              		.loc 1 288 3 view .LVU53
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 365              		.loc 1 289 3 view .LVU54
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 366              		.loc 1 290 3 view .LVU55
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 367              		.loc 1 291 3 view .LVU56
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 368              		.loc 1 292 3 view .LVU57
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 369              		.loc 1 293 3 view .LVU58
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 370              		.loc 1 294 3 view .LVU59
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 371              		.loc 1 295 3 view .LVU60
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 372              		.loc 1 296 3 view .LVU61
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 48


 373              		.loc 1 299 3 view .LVU62
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 374              		.loc 1 299 11 is_stmt 0 view .LVU63
 375 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 376              		.loc 1 299 6 view .LVU64
 377 000e F3B9     		cbnz	r3, .L18
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 378              		.loc 1 302 5 is_stmt 1 view .LVU65
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 379              		.loc 1 302 38 is_stmt 0 view .LVU66
 380 0010 5E4B     		ldr	r3, .L50
 381 0012 0364     		str	r3, [r0, #64]
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 382              		.loc 1 303 5 is_stmt 1 view .LVU67
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 383              		.loc 1 303 38 is_stmt 0 view .LVU68
 384 0014 5E4B     		ldr	r3, .L50+4
 385 0016 4364     		str	r3, [r0, #68]
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 386              		.loc 1 304 5 is_stmt 1 view .LVU69
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 387              		.loc 1 304 38 is_stmt 0 view .LVU70
 388 0018 5E4B     		ldr	r3, .L50+8
 389 001a 8364     		str	r3, [r0, #72]
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 390              		.loc 1 305 5 is_stmt 1 view .LVU71
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 391              		.loc 1 305 38 is_stmt 0 view .LVU72
 392 001c 5E4B     		ldr	r3, .L50+12
 393 001e C364     		str	r3, [r0, #76]
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 394              		.loc 1 306 5 is_stmt 1 view .LVU73
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 395              		.loc 1 306 38 is_stmt 0 view .LVU74
 396 0020 5E4B     		ldr	r3, .L50+16
 397 0022 8362     		str	r3, [r0, #40]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 398              		.loc 1 307 5 is_stmt 1 view .LVU75
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 399              		.loc 1 307 38 is_stmt 0 view .LVU76
 400 0024 5E4B     		ldr	r3, .L50+20
 401 0026 C362     		str	r3, [r0, #44]
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 402              		.loc 1 308 5 is_stmt 1 view .LVU77
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 403              		.loc 1 308 38 is_stmt 0 view .LVU78
 404 0028 5E4B     		ldr	r3, .L50+24
 405 002a 0363     		str	r3, [r0, #48]
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 406              		.loc 1 309 5 is_stmt 1 view .LVU79
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 407              		.loc 1 309 38 is_stmt 0 view .LVU80
 408 002c 5E4B     		ldr	r3, .L50+28
 409 002e 4363     		str	r3, [r0, #52]
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 410              		.loc 1 310 5 is_stmt 1 view .LVU81
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 49


 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 411              		.loc 1 310 38 is_stmt 0 view .LVU82
 412 0030 5E4B     		ldr	r3, .L50+32
 413 0032 8363     		str	r3, [r0, #56]
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 414              		.loc 1 311 5 is_stmt 1 view .LVU83
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 415              		.loc 1 311 38 is_stmt 0 view .LVU84
 416 0034 5E4B     		ldr	r3, .L50+36
 417 0036 C363     		str	r3, [r0, #60]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 418              		.loc 1 312 5 is_stmt 1 view .LVU85
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 419              		.loc 1 312 38 is_stmt 0 view .LVU86
 420 0038 5E4B     		ldr	r3, .L50+40
 421 003a 0365     		str	r3, [r0, #80]
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 422              		.loc 1 313 5 is_stmt 1 view .LVU87
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 423              		.loc 1 313 38 is_stmt 0 view .LVU88
 424 003c 5E4B     		ldr	r3, .L50+44
 425 003e 4365     		str	r3, [r0, #84]
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 426              		.loc 1 314 5 is_stmt 1 view .LVU89
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 427              		.loc 1 314 38 is_stmt 0 view .LVU90
 428 0040 5E4B     		ldr	r3, .L50+48
 429 0042 8365     		str	r3, [r0, #88]
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 430              		.loc 1 316 5 is_stmt 1 view .LVU91
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 431              		.loc 1 316 13 is_stmt 0 view .LVU92
 432 0044 C36D     		ldr	r3, [r0, #92]
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 433              		.loc 1 316 8 view .LVU93
 434 0046 EBB1     		cbz	r3, .L41
 435              	.L19:
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 436              		.loc 1 322 5 is_stmt 1 view .LVU94
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 437              		.loc 1 322 9 is_stmt 0 view .LVU95
 438 0048 E36D     		ldr	r3, [r4, #92]
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 439              		.loc 1 322 5 view .LVU96
 440 004a 2046     		mov	r0, r4
 441              	.LVL16:
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 442              		.loc 1 322 5 view .LVU97
 443 004c 9847     		blx	r3
 444              	.LVL17:
 445              	.L18:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 446              		.loc 1 334 3 is_stmt 1 view .LVU98
 447 004e 2268     		ldr	r2, [r4]
 448 0050 1368     		ldr	r3, [r2]
 449 0052 43F00103 		orr	r3, r3, #1
 450 0056 1360     		str	r3, [r2]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 50


 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 451              		.loc 1 337 3 view .LVU99
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 452              		.loc 1 337 15 is_stmt 0 view .LVU100
 453 0058 FFF7FEFF 		bl	HAL_GetTick
 454              	.LVL18:
 455 005c 0546     		mov	r5, r0
 456              	.LVL19:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 457              		.loc 1 340 3 is_stmt 1 view .LVU101
 458              	.L20:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 459              		.loc 1 340 47 view .LVU102
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 460              		.loc 1 340 15 is_stmt 0 view .LVU103
 461 005e 2368     		ldr	r3, [r4]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 462              		.loc 1 340 25 view .LVU104
 463 0060 5A68     		ldr	r2, [r3, #4]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 464              		.loc 1 340 47 view .LVU105
 465 0062 12F0010F 		tst	r2, #1
 466 0066 10D1     		bne	.L42
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 467              		.loc 1 342 5 is_stmt 1 view .LVU106
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 468              		.loc 1 342 10 is_stmt 0 view .LVU107
 469 0068 FFF7FEFF 		bl	HAL_GetTick
 470              	.LVL20:
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 471              		.loc 1 342 24 view .LVU108
 472 006c 401B     		subs	r0, r0, r5
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 473              		.loc 1 342 8 view .LVU109
 474 006e 0A28     		cmp	r0, #10
 475 0070 F5D9     		bls	.L20
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 476              		.loc 1 345 7 is_stmt 1 view .LVU110
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 477              		.loc 1 345 11 is_stmt 0 view .LVU111
 478 0072 636A     		ldr	r3, [r4, #36]
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 479              		.loc 1 345 23 view .LVU112
 480 0074 43F40033 		orr	r3, r3, #131072
 481 0078 6362     		str	r3, [r4, #36]
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 482              		.loc 1 348 7 is_stmt 1 view .LVU113
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 483              		.loc 1 348 19 is_stmt 0 view .LVU114
 484 007a 0523     		movs	r3, #5
 485 007c 84F82030 		strb	r3, [r4, #32]
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 486              		.loc 1 350 7 is_stmt 1 view .LVU115
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 487              		.loc 1 350 14 is_stmt 0 view .LVU116
 488 0080 0120     		movs	r0, #1
 489              	.L17:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 51


 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 490              		.loc 1 450 1 view .LVU117
 491 0082 38BD     		pop	{r3, r4, r5, pc}
 492              	.LVL21:
 493              	.L41:
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 494              		.loc 1 318 7 is_stmt 1 view .LVU118
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 495              		.loc 1 318 29 is_stmt 0 view .LVU119
 496 0084 4E4B     		ldr	r3, .L50+52
 497 0086 C365     		str	r3, [r0, #92]
 498 0088 DEE7     		b	.L19
 499              	.LVL22:
 500              	.L42:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 501              		.loc 1 355 3 is_stmt 1 view .LVU120
 502 008a 1A68     		ldr	r2, [r3]
 503 008c 22F00202 		bic	r2, r2, #2
 504 0090 1A60     		str	r2, [r3]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 505              		.loc 1 358 3 view .LVU121
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 506              		.loc 1 358 15 is_stmt 0 view .LVU122
 507 0092 FFF7FEFF 		bl	HAL_GetTick
 508              	.LVL23:
 509 0096 0546     		mov	r5, r0
 510              	.LVL24:
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 511              		.loc 1 361 3 is_stmt 1 view .LVU123
 512              	.L22:
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 513              		.loc 1 361 47 view .LVU124
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 514              		.loc 1 361 15 is_stmt 0 view .LVU125
 515 0098 2368     		ldr	r3, [r4]
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 516              		.loc 1 361 25 view .LVU126
 517 009a 5A68     		ldr	r2, [r3, #4]
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 518              		.loc 1 361 47 view .LVU127
 519 009c 12F0020F 		tst	r2, #2
 520 00a0 0DD0     		beq	.L43
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 521              		.loc 1 363 5 is_stmt 1 view .LVU128
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 522              		.loc 1 363 10 is_stmt 0 view .LVU129
 523 00a2 FFF7FEFF 		bl	HAL_GetTick
 524              	.LVL25:
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 525              		.loc 1 363 24 view .LVU130
 526 00a6 401B     		subs	r0, r0, r5
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 527              		.loc 1 363 8 view .LVU131
 528 00a8 0A28     		cmp	r0, #10
 529 00aa F5D9     		bls	.L22
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 530              		.loc 1 366 7 is_stmt 1 view .LVU132
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 52


 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 531              		.loc 1 366 11 is_stmt 0 view .LVU133
 532 00ac 636A     		ldr	r3, [r4, #36]
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 533              		.loc 1 366 23 view .LVU134
 534 00ae 43F40033 		orr	r3, r3, #131072
 535 00b2 6362     		str	r3, [r4, #36]
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 536              		.loc 1 369 7 is_stmt 1 view .LVU135
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 537              		.loc 1 369 19 is_stmt 0 view .LVU136
 538 00b4 0523     		movs	r3, #5
 539 00b6 84F82030 		strb	r3, [r4, #32]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 540              		.loc 1 371 7 is_stmt 1 view .LVU137
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 541              		.loc 1 371 14 is_stmt 0 view .LVU138
 542 00ba 0120     		movs	r0, #1
 543 00bc E1E7     		b	.L17
 544              	.L43:
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 545              		.loc 1 376 3 is_stmt 1 view .LVU139
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 546              		.loc 1 376 17 is_stmt 0 view .LVU140
 547 00be 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 548              		.loc 1 376 6 view .LVU141
 549 00c0 012A     		cmp	r2, #1
 550 00c2 3DD0     		beq	.L44
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 551              		.loc 1 382 5 is_stmt 1 view .LVU142
 552 00c4 1A68     		ldr	r2, [r3]
 553 00c6 22F08002 		bic	r2, r2, #128
 554 00ca 1A60     		str	r2, [r3]
 555              	.L25:
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 556              		.loc 1 386 3 view .LVU143
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 557              		.loc 1 386 17 is_stmt 0 view .LVU144
 558 00cc 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 559              		.loc 1 386 6 view .LVU145
 560 00ce 012B     		cmp	r3, #1
 561 00d0 3BD0     		beq	.L45
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 562              		.loc 1 392 5 is_stmt 1 view .LVU146
 563 00d2 2268     		ldr	r2, [r4]
 564 00d4 1368     		ldr	r3, [r2]
 565 00d6 23F04003 		bic	r3, r3, #64
 566 00da 1360     		str	r3, [r2]
 567              	.L27:
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 568              		.loc 1 396 3 view .LVU147
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 569              		.loc 1 396 17 is_stmt 0 view .LVU148
 570 00dc A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 53


 571              		.loc 1 396 6 view .LVU149
 572 00de 012B     		cmp	r3, #1
 573 00e0 39D0     		beq	.L46
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 574              		.loc 1 402 5 is_stmt 1 view .LVU150
 575 00e2 2268     		ldr	r2, [r4]
 576 00e4 1368     		ldr	r3, [r2]
 577 00e6 23F02003 		bic	r3, r3, #32
 578 00ea 1360     		str	r3, [r2]
 579              	.L29:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 580              		.loc 1 406 3 view .LVU151
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 581              		.loc 1 406 17 is_stmt 0 view .LVU152
 582 00ec E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 583              		.loc 1 406 6 view .LVU153
 584 00ee 012B     		cmp	r3, #1
 585 00f0 37D0     		beq	.L47
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 586              		.loc 1 412 5 is_stmt 1 view .LVU154
 587 00f2 2268     		ldr	r2, [r4]
 588 00f4 1368     		ldr	r3, [r2]
 589 00f6 43F01003 		orr	r3, r3, #16
 590 00fa 1360     		str	r3, [r2]
 591              	.L31:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 592              		.loc 1 416 3 view .LVU155
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 593              		.loc 1 416 17 is_stmt 0 view .LVU156
 594 00fc 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 595              		.loc 1 416 6 view .LVU157
 596 00fe 012B     		cmp	r3, #1
 597 0100 35D0     		beq	.L48
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 598              		.loc 1 422 5 is_stmt 1 view .LVU158
 599 0102 2268     		ldr	r2, [r4]
 600 0104 1368     		ldr	r3, [r2]
 601 0106 23F00803 		bic	r3, r3, #8
 602 010a 1360     		str	r3, [r2]
 603              	.L33:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 604              		.loc 1 426 3 view .LVU159
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 605              		.loc 1 426 17 is_stmt 0 view .LVU160
 606 010c 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 607              		.loc 1 426 6 view .LVU161
 608 010e 012B     		cmp	r3, #1
 609 0110 33D0     		beq	.L49
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 610              		.loc 1 432 5 is_stmt 1 view .LVU162
 611 0112 2268     		ldr	r2, [r4]
 612 0114 1368     		ldr	r3, [r2]
 613 0116 23F00403 		bic	r3, r3, #4
 614 011a 1360     		str	r3, [r2]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 54


 615              	.L35:
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 616              		.loc 1 436 3 view .LVU163
 617 011c A368     		ldr	r3, [r4, #8]
 618 011e E268     		ldr	r2, [r4, #12]
 619 0120 1343     		orrs	r3, r3, r2
 620 0122 2269     		ldr	r2, [r4, #16]
 621 0124 1343     		orrs	r3, r3, r2
 622 0126 6269     		ldr	r2, [r4, #20]
 623 0128 1343     		orrs	r3, r3, r2
 624 012a 6268     		ldr	r2, [r4, #4]
 625 012c 013A     		subs	r2, r2, #1
 626 012e 2168     		ldr	r1, [r4]
 627 0130 1343     		orrs	r3, r3, r2
 628 0132 CB61     		str	r3, [r1, #28]
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 629              		.loc 1 443 3 view .LVU164
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 630              		.loc 1 443 19 is_stmt 0 view .LVU165
 631 0134 0020     		movs	r0, #0
 632 0136 6062     		str	r0, [r4, #36]
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 633              		.loc 1 446 3 is_stmt 1 view .LVU166
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 634              		.loc 1 446 15 is_stmt 0 view .LVU167
 635 0138 0123     		movs	r3, #1
 636 013a 84F82030 		strb	r3, [r4, #32]
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 637              		.loc 1 449 3 is_stmt 1 view .LVU168
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 638              		.loc 1 449 10 is_stmt 0 view .LVU169
 639 013e A0E7     		b	.L17
 640              	.L44:
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 641              		.loc 1 378 5 is_stmt 1 view .LVU170
 642 0140 1A68     		ldr	r2, [r3]
 643 0142 42F08002 		orr	r2, r2, #128
 644 0146 1A60     		str	r2, [r3]
 645 0148 C0E7     		b	.L25
 646              	.L45:
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 647              		.loc 1 388 5 view .LVU171
 648 014a 2268     		ldr	r2, [r4]
 649 014c 1368     		ldr	r3, [r2]
 650 014e 43F04003 		orr	r3, r3, #64
 651 0152 1360     		str	r3, [r2]
 652 0154 C2E7     		b	.L27
 653              	.L46:
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 654              		.loc 1 398 5 view .LVU172
 655 0156 2268     		ldr	r2, [r4]
 656 0158 1368     		ldr	r3, [r2]
 657 015a 43F02003 		orr	r3, r3, #32
 658 015e 1360     		str	r3, [r2]
 659 0160 C4E7     		b	.L29
 660              	.L47:
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 55


 661              		.loc 1 408 5 view .LVU173
 662 0162 2268     		ldr	r2, [r4]
 663 0164 1368     		ldr	r3, [r2]
 664 0166 23F01003 		bic	r3, r3, #16
 665 016a 1360     		str	r3, [r2]
 666 016c C6E7     		b	.L31
 667              	.L48:
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 668              		.loc 1 418 5 view .LVU174
 669 016e 2268     		ldr	r2, [r4]
 670 0170 1368     		ldr	r3, [r2]
 671 0172 43F00803 		orr	r3, r3, #8
 672 0176 1360     		str	r3, [r2]
 673 0178 C8E7     		b	.L33
 674              	.L49:
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 675              		.loc 1 428 5 view .LVU175
 676 017a 2268     		ldr	r2, [r4]
 677 017c 1368     		ldr	r3, [r2]
 678 017e 43F00403 		orr	r3, r3, #4
 679 0182 1360     		str	r3, [r2]
 680 0184 CAE7     		b	.L35
 681              	.LVL26:
 682              	.L36:
 683              	.LCFI1:
 684              		.cfi_def_cfa_offset 0
 685              		.cfi_restore 3
 686              		.cfi_restore 4
 687              		.cfi_restore 5
 688              		.cfi_restore 14
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 689              		.loc 1 281 12 is_stmt 0 view .LVU176
 690 0186 0120     		movs	r0, #1
 691              	.LVL27:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 692              		.loc 1 450 1 view .LVU177
 693 0188 7047     		bx	lr
 694              	.L51:
 695 018a 00BF     		.align	2
 696              	.L50:
 697 018c 00000000 		.word	HAL_CAN_RxFifo0MsgPendingCallback
 698 0190 00000000 		.word	HAL_CAN_RxFifo0FullCallback
 699 0194 00000000 		.word	HAL_CAN_RxFifo1MsgPendingCallback
 700 0198 00000000 		.word	HAL_CAN_RxFifo1FullCallback
 701 019c 00000000 		.word	HAL_CAN_TxMailbox0CompleteCallback
 702 01a0 00000000 		.word	HAL_CAN_TxMailbox1CompleteCallback
 703 01a4 00000000 		.word	HAL_CAN_TxMailbox2CompleteCallback
 704 01a8 00000000 		.word	HAL_CAN_TxMailbox0AbortCallback
 705 01ac 00000000 		.word	HAL_CAN_TxMailbox1AbortCallback
 706 01b0 00000000 		.word	HAL_CAN_TxMailbox2AbortCallback
 707 01b4 00000000 		.word	HAL_CAN_SleepCallback
 708 01b8 00000000 		.word	HAL_CAN_WakeUpFromRxMsgCallback
 709 01bc 00000000 		.word	HAL_CAN_ErrorCallback
 710 01c0 00000000 		.word	HAL_CAN_MspInit
 711              		.cfi_endproc
 712              	.LFE65:
 714              		.section	.text.HAL_CAN_RegisterCallback,"ax",%progbits
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 56


 715              		.align	1
 716              		.global	HAL_CAN_RegisterCallback
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 721              	HAL_CAN_RegisterCallback:
 722              	.LVL28:
 723              	.LFB69:
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 724              		.loc 1 560 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 729              		.loc 1 560 1 is_stmt 0 view .LVU179
 730 0000 0346     		mov	r3, r0
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 731              		.loc 1 561 3 is_stmt 1 view .LVU180
 732              	.LVL29:
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 733              		.loc 1 563 3 view .LVU181
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 734              		.loc 1 563 6 is_stmt 0 view .LVU182
 735 0002 B2B1     		cbz	r2, .L81
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 736              		.loc 1 560 1 view .LVU183
 737 0004 10B4     		push	{r4}
 738              	.LCFI2:
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 4, -4
 741 0006 1446     		mov	r4, r2
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 742              		.loc 1 571 3 is_stmt 1 view .LVU184
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 743              		.loc 1 571 11 is_stmt 0 view .LVU185
 744 0008 90F82000 		ldrb	r0, [r0, #32]	@ zero_extendqisi2
 745              	.LVL30:
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 746              		.loc 1 571 11 view .LVU186
 747 000c C0B2     		uxtb	r0, r0
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 748              		.loc 1 571 6 view .LVU187
 749 000e 0128     		cmp	r0, #1
 750 0010 15D0     		beq	.L82
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 751              		.loc 1 644 8 is_stmt 1 view .LVU188
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 752              		.loc 1 644 16 is_stmt 0 view .LVU189
 753 0012 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 754              	.LVL31:
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 755              		.loc 1 644 11 view .LVU190
 756 0016 02F0FF00 		and	r0, r2, #255
 757 001a 002A     		cmp	r2, #0
 758 001c 51D1     		bne	.L73
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 57


 759              		.loc 1 646 5 is_stmt 1 view .LVU191
 760 001e 0D29     		cmp	r1, #13
 761 0020 4BD0     		beq	.L74
 762 0022 0E29     		cmp	r1, #14
 763 0024 4BD0     		beq	.L75
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 764              		.loc 1 658 9 view .LVU192
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 765              		.loc 1 658 13 is_stmt 0 view .LVU193
 766 0026 5A6A     		ldr	r2, [r3, #36]
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 767              		.loc 1 658 25 view .LVU194
 768 0028 42F48002 		orr	r2, r2, #4194304
 769 002c 5A62     		str	r2, [r3, #36]
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 770              		.loc 1 661 9 is_stmt 1 view .LVU195
 771              	.LVL32:
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 772              		.loc 1 662 9 view .LVU196
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 773              		.loc 1 661 16 is_stmt 0 view .LVU197
 774 002e 0120     		movs	r0, #1
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 775              		.loc 1 662 9 view .LVU198
 776 0030 4CE0     		b	.L54
 777              	.LVL33:
 778              	.L81:
 779              	.LCFI3:
 780              		.cfi_def_cfa_offset 0
 781              		.cfi_restore 4
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 782              		.loc 1 566 5 is_stmt 1 view .LVU199
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 783              		.loc 1 566 9 is_stmt 0 view .LVU200
 784 0032 426A     		ldr	r2, [r0, #36]
 785              	.LVL34:
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 786              		.loc 1 566 21 view .LVU201
 787 0034 42F48002 		orr	r2, r2, #4194304
 788 0038 4262     		str	r2, [r0, #36]
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 789              		.loc 1 568 5 is_stmt 1 view .LVU202
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 790              		.loc 1 568 12 is_stmt 0 view .LVU203
 791 003a 0120     		movs	r0, #1
 792              	.LVL35:
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 793              		.loc 1 675 1 view .LVU204
 794 003c 7047     		bx	lr
 795              	.LVL36:
 796              	.L82:
 797              	.LCFI4:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 4, -4
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 800              		.loc 1 573 5 is_stmt 1 view .LVU205
 801 003e 0E29     		cmp	r1, #14
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 58


 802 0040 36D8     		bhi	.L56
 803 0042 DFE801F0 		tbb	[pc, r1]
 804              	.LVL37:
 805              	.L58:
 806 0046 08       		.byte	(.L72-.L58)/2
 807 0047 0B       		.byte	(.L71-.L58)/2
 808 0048 0E       		.byte	(.L70-.L58)/2
 809 0049 11       		.byte	(.L69-.L58)/2
 810 004a 14       		.byte	(.L68-.L58)/2
 811 004b 17       		.byte	(.L67-.L58)/2
 812 004c 1A       		.byte	(.L66-.L58)/2
 813 004d 1D       		.byte	(.L65-.L58)/2
 814 004e 20       		.byte	(.L64-.L58)/2
 815 004f 23       		.byte	(.L63-.L58)/2
 816 0050 26       		.byte	(.L62-.L58)/2
 817 0051 29       		.byte	(.L61-.L58)/2
 818 0052 2C       		.byte	(.L60-.L58)/2
 819 0053 2F       		.byte	(.L59-.L58)/2
 820 0054 32       		.byte	(.L57-.L58)/2
 821 0055 00       		.p2align 1
 822              	.L72:
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 823              		.loc 1 576 9 view .LVU206
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 824              		.loc 1 576 42 is_stmt 0 view .LVU207
 825 0056 9C62     		str	r4, [r3, #40]
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 826              		.loc 1 577 9 is_stmt 1 view .LVU208
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 827              		.loc 1 561 21 is_stmt 0 view .LVU209
 828 0058 0846     		mov	r0, r1
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 829              		.loc 1 577 9 view .LVU210
 830 005a 37E0     		b	.L54
 831              	.L71:
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 832              		.loc 1 580 9 is_stmt 1 view .LVU211
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 833              		.loc 1 580 42 is_stmt 0 view .LVU212
 834 005c DC62     		str	r4, [r3, #44]
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 835              		.loc 1 581 9 is_stmt 1 view .LVU213
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 836              		.loc 1 561 21 is_stmt 0 view .LVU214
 837 005e 0020     		movs	r0, #0
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 838              		.loc 1 581 9 view .LVU215
 839 0060 34E0     		b	.L54
 840              	.L70:
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 841              		.loc 1 584 9 is_stmt 1 view .LVU216
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 842              		.loc 1 584 42 is_stmt 0 view .LVU217
 843 0062 1C63     		str	r4, [r3, #48]
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 844              		.loc 1 585 9 is_stmt 1 view .LVU218
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 59


 845              		.loc 1 561 21 is_stmt 0 view .LVU219
 846 0064 0020     		movs	r0, #0
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 847              		.loc 1 585 9 view .LVU220
 848 0066 31E0     		b	.L54
 849              	.L69:
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 850              		.loc 1 588 9 is_stmt 1 view .LVU221
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 851              		.loc 1 588 39 is_stmt 0 view .LVU222
 852 0068 5C63     		str	r4, [r3, #52]
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 853              		.loc 1 589 9 is_stmt 1 view .LVU223
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 854              		.loc 1 561 21 is_stmt 0 view .LVU224
 855 006a 0020     		movs	r0, #0
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 856              		.loc 1 589 9 view .LVU225
 857 006c 2EE0     		b	.L54
 858              	.L68:
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 859              		.loc 1 592 9 is_stmt 1 view .LVU226
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 860              		.loc 1 592 39 is_stmt 0 view .LVU227
 861 006e 9C63     		str	r4, [r3, #56]
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 862              		.loc 1 593 9 is_stmt 1 view .LVU228
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 863              		.loc 1 561 21 is_stmt 0 view .LVU229
 864 0070 0020     		movs	r0, #0
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 865              		.loc 1 593 9 view .LVU230
 866 0072 2BE0     		b	.L54
 867              	.L67:
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 868              		.loc 1 596 9 is_stmt 1 view .LVU231
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 869              		.loc 1 596 39 is_stmt 0 view .LVU232
 870 0074 DC63     		str	r4, [r3, #60]
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 871              		.loc 1 597 9 is_stmt 1 view .LVU233
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 872              		.loc 1 561 21 is_stmt 0 view .LVU234
 873 0076 0020     		movs	r0, #0
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 874              		.loc 1 597 9 view .LVU235
 875 0078 28E0     		b	.L54
 876              	.L66:
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 877              		.loc 1 600 9 is_stmt 1 view .LVU236
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 878              		.loc 1 600 41 is_stmt 0 view .LVU237
 879 007a 1C64     		str	r4, [r3, #64]
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 880              		.loc 1 601 9 is_stmt 1 view .LVU238
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 881              		.loc 1 561 21 is_stmt 0 view .LVU239
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 60


 882 007c 0020     		movs	r0, #0
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 883              		.loc 1 601 9 view .LVU240
 884 007e 25E0     		b	.L54
 885              	.L65:
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 886              		.loc 1 604 9 is_stmt 1 view .LVU241
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 887              		.loc 1 604 35 is_stmt 0 view .LVU242
 888 0080 5C64     		str	r4, [r3, #68]
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 889              		.loc 1 605 9 is_stmt 1 view .LVU243
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 890              		.loc 1 561 21 is_stmt 0 view .LVU244
 891 0082 0020     		movs	r0, #0
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 892              		.loc 1 605 9 view .LVU245
 893 0084 22E0     		b	.L54
 894              	.L64:
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 895              		.loc 1 608 9 is_stmt 1 view .LVU246
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 896              		.loc 1 608 41 is_stmt 0 view .LVU247
 897 0086 9C64     		str	r4, [r3, #72]
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 898              		.loc 1 609 9 is_stmt 1 view .LVU248
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 899              		.loc 1 561 21 is_stmt 0 view .LVU249
 900 0088 0020     		movs	r0, #0
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 901              		.loc 1 609 9 view .LVU250
 902 008a 1FE0     		b	.L54
 903              	.L63:
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 904              		.loc 1 612 9 is_stmt 1 view .LVU251
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 905              		.loc 1 612 35 is_stmt 0 view .LVU252
 906 008c DC64     		str	r4, [r3, #76]
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 907              		.loc 1 613 9 is_stmt 1 view .LVU253
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 908              		.loc 1 561 21 is_stmt 0 view .LVU254
 909 008e 0020     		movs	r0, #0
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 910              		.loc 1 613 9 view .LVU255
 911 0090 1CE0     		b	.L54
 912              	.L62:
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 913              		.loc 1 616 9 is_stmt 1 view .LVU256
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 914              		.loc 1 616 29 is_stmt 0 view .LVU257
 915 0092 1C65     		str	r4, [r3, #80]
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 916              		.loc 1 617 9 is_stmt 1 view .LVU258
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 917              		.loc 1 561 21 is_stmt 0 view .LVU259
 918 0094 0020     		movs	r0, #0
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 61


 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 919              		.loc 1 617 9 view .LVU260
 920 0096 19E0     		b	.L54
 921              	.L61:
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 922              		.loc 1 620 9 is_stmt 1 view .LVU261
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 923              		.loc 1 620 39 is_stmt 0 view .LVU262
 924 0098 5C65     		str	r4, [r3, #84]
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 925              		.loc 1 621 9 is_stmt 1 view .LVU263
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 926              		.loc 1 561 21 is_stmt 0 view .LVU264
 927 009a 0020     		movs	r0, #0
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 928              		.loc 1 621 9 view .LVU265
 929 009c 16E0     		b	.L54
 930              	.L60:
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 931              		.loc 1 624 9 is_stmt 1 view .LVU266
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 932              		.loc 1 624 29 is_stmt 0 view .LVU267
 933 009e 9C65     		str	r4, [r3, #88]
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 934              		.loc 1 625 9 is_stmt 1 view .LVU268
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 935              		.loc 1 561 21 is_stmt 0 view .LVU269
 936 00a0 0020     		movs	r0, #0
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 937              		.loc 1 625 9 view .LVU270
 938 00a2 13E0     		b	.L54
 939              	.L59:
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 940              		.loc 1 628 9 is_stmt 1 view .LVU271
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 941              		.loc 1 628 31 is_stmt 0 view .LVU272
 942 00a4 DC65     		str	r4, [r3, #92]
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 943              		.loc 1 629 9 is_stmt 1 view .LVU273
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 944              		.loc 1 561 21 is_stmt 0 view .LVU274
 945 00a6 0020     		movs	r0, #0
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 946              		.loc 1 629 9 view .LVU275
 947 00a8 10E0     		b	.L54
 948              	.L57:
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 949              		.loc 1 632 9 is_stmt 1 view .LVU276
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 950              		.loc 1 632 33 is_stmt 0 view .LVU277
 951 00aa 1C66     		str	r4, [r3, #96]
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 952              		.loc 1 633 9 is_stmt 1 view .LVU278
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 953              		.loc 1 561 21 is_stmt 0 view .LVU279
 954 00ac 0020     		movs	r0, #0
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 62


 955              		.loc 1 633 9 view .LVU280
 956 00ae 0DE0     		b	.L54
 957              	.L56:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 958              		.loc 1 637 9 is_stmt 1 view .LVU281
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 959              		.loc 1 637 13 is_stmt 0 view .LVU282
 960 00b0 5A6A     		ldr	r2, [r3, #36]
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 961              		.loc 1 637 25 view .LVU283
 962 00b2 42F48002 		orr	r2, r2, #4194304
 963 00b6 5A62     		str	r2, [r3, #36]
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 964              		.loc 1 640 9 is_stmt 1 view .LVU284
 965              	.LVL38:
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 966              		.loc 1 641 9 view .LVU285
 967 00b8 08E0     		b	.L54
 968              	.LVL39:
 969              	.L74:
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 970              		.loc 1 649 9 view .LVU286
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 971              		.loc 1 649 31 is_stmt 0 view .LVU287
 972 00ba DC65     		str	r4, [r3, #92]
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 973              		.loc 1 650 9 is_stmt 1 view .LVU288
 974 00bc 06E0     		b	.L54
 975              	.L75:
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 976              		.loc 1 653 9 view .LVU289
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 977              		.loc 1 653 33 is_stmt 0 view .LVU290
 978 00be 1C66     		str	r4, [r3, #96]
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 979              		.loc 1 654 9 is_stmt 1 view .LVU291
 980 00c0 04E0     		b	.L54
 981              	.L73:
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 982              		.loc 1 668 5 view .LVU292
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 983              		.loc 1 668 9 is_stmt 0 view .LVU293
 984 00c2 5A6A     		ldr	r2, [r3, #36]
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 985              		.loc 1 668 21 view .LVU294
 986 00c4 42F48002 		orr	r2, r2, #4194304
 987 00c8 5A62     		str	r2, [r3, #36]
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 988              		.loc 1 671 5 is_stmt 1 view .LVU295
 989              	.LVL40:
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 990              		.loc 1 671 12 is_stmt 0 view .LVU296
 991 00ca 0120     		movs	r0, #1
 992              	.LVL41:
 993              	.L54:
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 994              		.loc 1 675 1 view .LVU297
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 63


 995 00cc 10BC     		pop	{r4}
 996              	.LCFI5:
 997              		.cfi_restore 4
 998              		.cfi_def_cfa_offset 0
 999              	.LVL42:
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1000              		.loc 1 675 1 view .LVU298
 1001 00ce 7047     		bx	lr
 1002              		.cfi_endproc
 1003              	.LFE69:
 1005              		.section	.text.HAL_CAN_UnRegisterCallback,"ax",%progbits
 1006              		.align	1
 1007              		.global	HAL_CAN_UnRegisterCallback
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1012              	HAL_CAN_UnRegisterCallback:
 1013              	.LVL43:
 1014              	.LFB70:
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 1015              		.loc 1 702 1 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 1020              		.loc 1 702 1 is_stmt 0 view .LVU300
 1021 0000 0246     		mov	r2, r0
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1022              		.loc 1 703 3 is_stmt 1 view .LVU301
 1023              	.LVL44:
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1024              		.loc 1 705 3 view .LVU302
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1025              		.loc 1 705 11 is_stmt 0 view .LVU303
 1026 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1027 0006 D8B2     		uxtb	r0, r3
 1028              	.LVL45:
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1029              		.loc 1 705 6 view .LVU304
 1030 0008 0128     		cmp	r0, #1
 1031 000a 0FD0     		beq	.L108
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1032              		.loc 1 778 8 is_stmt 1 view .LVU305
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1033              		.loc 1 778 16 is_stmt 0 view .LVU306
 1034 000c 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1035              		.loc 1 778 11 view .LVU307
 1036 0010 03F0FF00 		and	r0, r3, #255
 1037 0014 002B     		cmp	r3, #0
 1038 0016 5CD1     		bne	.L103
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1039              		.loc 1 780 5 is_stmt 1 view .LVU308
 1040 0018 0D29     		cmp	r1, #13
 1041 001a 54D0     		beq	.L104
 1042 001c 0E29     		cmp	r1, #14
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 64


 1043 001e 55D0     		beq	.L105
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1044              		.loc 1 792 9 view .LVU309
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1045              		.loc 1 792 13 is_stmt 0 view .LVU310
 1046 0020 536A     		ldr	r3, [r2, #36]
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1047              		.loc 1 792 25 view .LVU311
 1048 0022 43F48003 		orr	r3, r3, #4194304
 1049 0026 5362     		str	r3, [r2, #36]
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1050              		.loc 1 795 9 is_stmt 1 view .LVU312
 1051              	.LVL46:
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1052              		.loc 1 796 9 view .LVU313
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1053              		.loc 1 795 16 is_stmt 0 view .LVU314
 1054 0028 0120     		movs	r0, #1
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1055              		.loc 1 796 9 view .LVU315
 1056 002a 7047     		bx	lr
 1057              	.LVL47:
 1058              	.L108:
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1059              		.loc 1 707 5 is_stmt 1 view .LVU316
 1060 002c 0E29     		cmp	r1, #14
 1061 002e 45D8     		bhi	.L85
 1062 0030 DFE801F0 		tbb	[pc, r1]
 1063              	.L87:
 1064 0034 08       		.byte	(.L101-.L87)/2
 1065 0035 0C       		.byte	(.L100-.L87)/2
 1066 0036 10       		.byte	(.L99-.L87)/2
 1067 0037 14       		.byte	(.L98-.L87)/2
 1068 0038 18       		.byte	(.L97-.L87)/2
 1069 0039 1C       		.byte	(.L96-.L87)/2
 1070 003a 20       		.byte	(.L95-.L87)/2
 1071 003b 24       		.byte	(.L94-.L87)/2
 1072 003c 28       		.byte	(.L93-.L87)/2
 1073 003d 2C       		.byte	(.L92-.L87)/2
 1074 003e 30       		.byte	(.L91-.L87)/2
 1075 003f 34       		.byte	(.L90-.L87)/2
 1076 0040 38       		.byte	(.L89-.L87)/2
 1077 0041 3C       		.byte	(.L88-.L87)/2
 1078 0042 40       		.byte	(.L86-.L87)/2
 1079 0043 00       		.p2align 1
 1080              	.L101:
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1081              		.loc 1 710 9 view .LVU317
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1082              		.loc 1 710 42 is_stmt 0 view .LVU318
 1083 0044 264B     		ldr	r3, .L109
 1084 0046 9362     		str	r3, [r2, #40]
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1085              		.loc 1 711 9 is_stmt 1 view .LVU319
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1086              		.loc 1 703 21 is_stmt 0 view .LVU320
 1087 0048 0846     		mov	r0, r1
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 65


 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1088              		.loc 1 711 9 view .LVU321
 1089 004a 7047     		bx	lr
 1090              	.L100:
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1091              		.loc 1 714 9 is_stmt 1 view .LVU322
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1092              		.loc 1 714 42 is_stmt 0 view .LVU323
 1093 004c 254B     		ldr	r3, .L109+4
 1094 004e D362     		str	r3, [r2, #44]
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1095              		.loc 1 715 9 is_stmt 1 view .LVU324
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1096              		.loc 1 703 21 is_stmt 0 view .LVU325
 1097 0050 0020     		movs	r0, #0
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1098              		.loc 1 715 9 view .LVU326
 1099 0052 7047     		bx	lr
 1100              	.L99:
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1101              		.loc 1 718 9 is_stmt 1 view .LVU327
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1102              		.loc 1 718 42 is_stmt 0 view .LVU328
 1103 0054 244B     		ldr	r3, .L109+8
 1104 0056 1363     		str	r3, [r2, #48]
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1105              		.loc 1 719 9 is_stmt 1 view .LVU329
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1106              		.loc 1 703 21 is_stmt 0 view .LVU330
 1107 0058 0020     		movs	r0, #0
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1108              		.loc 1 719 9 view .LVU331
 1109 005a 7047     		bx	lr
 1110              	.L98:
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1111              		.loc 1 722 9 is_stmt 1 view .LVU332
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1112              		.loc 1 722 39 is_stmt 0 view .LVU333
 1113 005c 234B     		ldr	r3, .L109+12
 1114 005e 5363     		str	r3, [r2, #52]
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1115              		.loc 1 723 9 is_stmt 1 view .LVU334
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1116              		.loc 1 703 21 is_stmt 0 view .LVU335
 1117 0060 0020     		movs	r0, #0
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1118              		.loc 1 723 9 view .LVU336
 1119 0062 7047     		bx	lr
 1120              	.L97:
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1121              		.loc 1 726 9 is_stmt 1 view .LVU337
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1122              		.loc 1 726 39 is_stmt 0 view .LVU338
 1123 0064 224B     		ldr	r3, .L109+16
 1124 0066 9363     		str	r3, [r2, #56]
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1125              		.loc 1 727 9 is_stmt 1 view .LVU339
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 66


 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1126              		.loc 1 703 21 is_stmt 0 view .LVU340
 1127 0068 0020     		movs	r0, #0
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1128              		.loc 1 727 9 view .LVU341
 1129 006a 7047     		bx	lr
 1130              	.L96:
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1131              		.loc 1 730 9 is_stmt 1 view .LVU342
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1132              		.loc 1 730 39 is_stmt 0 view .LVU343
 1133 006c 214B     		ldr	r3, .L109+20
 1134 006e D363     		str	r3, [r2, #60]
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1135              		.loc 1 731 9 is_stmt 1 view .LVU344
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1136              		.loc 1 703 21 is_stmt 0 view .LVU345
 1137 0070 0020     		movs	r0, #0
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1138              		.loc 1 731 9 view .LVU346
 1139 0072 7047     		bx	lr
 1140              	.L95:
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1141              		.loc 1 734 9 is_stmt 1 view .LVU347
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1142              		.loc 1 734 41 is_stmt 0 view .LVU348
 1143 0074 204B     		ldr	r3, .L109+24
 1144 0076 1364     		str	r3, [r2, #64]
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1145              		.loc 1 735 9 is_stmt 1 view .LVU349
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1146              		.loc 1 703 21 is_stmt 0 view .LVU350
 1147 0078 0020     		movs	r0, #0
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1148              		.loc 1 735 9 view .LVU351
 1149 007a 7047     		bx	lr
 1150              	.L94:
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1151              		.loc 1 738 9 is_stmt 1 view .LVU352
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1152              		.loc 1 738 35 is_stmt 0 view .LVU353
 1153 007c 1F4B     		ldr	r3, .L109+28
 1154 007e 5364     		str	r3, [r2, #68]
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1155              		.loc 1 739 9 is_stmt 1 view .LVU354
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1156              		.loc 1 703 21 is_stmt 0 view .LVU355
 1157 0080 0020     		movs	r0, #0
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1158              		.loc 1 739 9 view .LVU356
 1159 0082 7047     		bx	lr
 1160              	.L93:
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1161              		.loc 1 742 9 is_stmt 1 view .LVU357
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1162              		.loc 1 742 41 is_stmt 0 view .LVU358
 1163 0084 1E4B     		ldr	r3, .L109+32
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 67


 1164 0086 9364     		str	r3, [r2, #72]
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1165              		.loc 1 743 9 is_stmt 1 view .LVU359
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1166              		.loc 1 703 21 is_stmt 0 view .LVU360
 1167 0088 0020     		movs	r0, #0
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1168              		.loc 1 743 9 view .LVU361
 1169 008a 7047     		bx	lr
 1170              	.L92:
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1171              		.loc 1 746 9 is_stmt 1 view .LVU362
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1172              		.loc 1 746 35 is_stmt 0 view .LVU363
 1173 008c 1D4B     		ldr	r3, .L109+36
 1174 008e D364     		str	r3, [r2, #76]
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1175              		.loc 1 747 9 is_stmt 1 view .LVU364
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1176              		.loc 1 703 21 is_stmt 0 view .LVU365
 1177 0090 0020     		movs	r0, #0
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1178              		.loc 1 747 9 view .LVU366
 1179 0092 7047     		bx	lr
 1180              	.L91:
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1181              		.loc 1 750 9 is_stmt 1 view .LVU367
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1182              		.loc 1 750 29 is_stmt 0 view .LVU368
 1183 0094 1C4B     		ldr	r3, .L109+40
 1184 0096 1365     		str	r3, [r2, #80]
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1185              		.loc 1 751 9 is_stmt 1 view .LVU369
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1186              		.loc 1 703 21 is_stmt 0 view .LVU370
 1187 0098 0020     		movs	r0, #0
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1188              		.loc 1 751 9 view .LVU371
 1189 009a 7047     		bx	lr
 1190              	.L90:
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1191              		.loc 1 754 9 is_stmt 1 view .LVU372
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1192              		.loc 1 754 39 is_stmt 0 view .LVU373
 1193 009c 1B4B     		ldr	r3, .L109+44
 1194 009e 5365     		str	r3, [r2, #84]
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1195              		.loc 1 755 9 is_stmt 1 view .LVU374
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1196              		.loc 1 703 21 is_stmt 0 view .LVU375
 1197 00a0 0020     		movs	r0, #0
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1198              		.loc 1 755 9 view .LVU376
 1199 00a2 7047     		bx	lr
 1200              	.L89:
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1201              		.loc 1 758 9 is_stmt 1 view .LVU377
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 68


 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1202              		.loc 1 758 29 is_stmt 0 view .LVU378
 1203 00a4 1A4B     		ldr	r3, .L109+48
 1204 00a6 9365     		str	r3, [r2, #88]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1205              		.loc 1 759 9 is_stmt 1 view .LVU379
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1206              		.loc 1 703 21 is_stmt 0 view .LVU380
 1207 00a8 0020     		movs	r0, #0
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1208              		.loc 1 759 9 view .LVU381
 1209 00aa 7047     		bx	lr
 1210              	.L88:
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1211              		.loc 1 762 9 is_stmt 1 view .LVU382
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1212              		.loc 1 762 31 is_stmt 0 view .LVU383
 1213 00ac 194B     		ldr	r3, .L109+52
 1214 00ae D365     		str	r3, [r2, #92]
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1215              		.loc 1 763 9 is_stmt 1 view .LVU384
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1216              		.loc 1 703 21 is_stmt 0 view .LVU385
 1217 00b0 0020     		movs	r0, #0
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1218              		.loc 1 763 9 view .LVU386
 1219 00b2 7047     		bx	lr
 1220              	.L86:
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1221              		.loc 1 766 9 is_stmt 1 view .LVU387
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1222              		.loc 1 766 33 is_stmt 0 view .LVU388
 1223 00b4 184B     		ldr	r3, .L109+56
 1224 00b6 1366     		str	r3, [r2, #96]
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1225              		.loc 1 767 9 is_stmt 1 view .LVU389
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1226              		.loc 1 703 21 is_stmt 0 view .LVU390
 1227 00b8 0020     		movs	r0, #0
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1228              		.loc 1 767 9 view .LVU391
 1229 00ba 7047     		bx	lr
 1230              	.L85:
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1231              		.loc 1 771 9 is_stmt 1 view .LVU392
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1232              		.loc 1 771 13 is_stmt 0 view .LVU393
 1233 00bc 536A     		ldr	r3, [r2, #36]
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1234              		.loc 1 771 25 view .LVU394
 1235 00be 43F48003 		orr	r3, r3, #4194304
 1236 00c2 5362     		str	r3, [r2, #36]
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1237              		.loc 1 774 9 is_stmt 1 view .LVU395
 1238              	.LVL48:
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1239              		.loc 1 775 9 view .LVU396
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 69


 1240 00c4 7047     		bx	lr
 1241              	.LVL49:
 1242              	.L104:
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1243              		.loc 1 783 9 view .LVU397
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1244              		.loc 1 783 31 is_stmt 0 view .LVU398
 1245 00c6 134B     		ldr	r3, .L109+52
 1246 00c8 D365     		str	r3, [r2, #92]
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1247              		.loc 1 784 9 is_stmt 1 view .LVU399
 1248 00ca 7047     		bx	lr
 1249              	.L105:
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1250              		.loc 1 787 9 view .LVU400
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1251              		.loc 1 787 33 is_stmt 0 view .LVU401
 1252 00cc 124B     		ldr	r3, .L109+56
 1253 00ce 1366     		str	r3, [r2, #96]
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1254              		.loc 1 788 9 is_stmt 1 view .LVU402
 1255 00d0 7047     		bx	lr
 1256              	.L103:
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1257              		.loc 1 802 5 view .LVU403
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1258              		.loc 1 802 9 is_stmt 0 view .LVU404
 1259 00d2 536A     		ldr	r3, [r2, #36]
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1260              		.loc 1 802 21 view .LVU405
 1261 00d4 43F48003 		orr	r3, r3, #4194304
 1262 00d8 5362     		str	r3, [r2, #36]
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1263              		.loc 1 805 5 is_stmt 1 view .LVU406
 1264              	.LVL50:
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1265              		.loc 1 805 12 is_stmt 0 view .LVU407
 1266 00da 0120     		movs	r0, #1
 1267              	.LVL51:
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1268              		.loc 1 808 3 is_stmt 1 view .LVU408
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 1269              		.loc 1 809 1 is_stmt 0 view .LVU409
 1270 00dc 7047     		bx	lr
 1271              	.L110:
 1272 00de 00BF     		.align	2
 1273              	.L109:
 1274 00e0 00000000 		.word	HAL_CAN_TxMailbox0CompleteCallback
 1275 00e4 00000000 		.word	HAL_CAN_TxMailbox1CompleteCallback
 1276 00e8 00000000 		.word	HAL_CAN_TxMailbox2CompleteCallback
 1277 00ec 00000000 		.word	HAL_CAN_TxMailbox0AbortCallback
 1278 00f0 00000000 		.word	HAL_CAN_TxMailbox1AbortCallback
 1279 00f4 00000000 		.word	HAL_CAN_TxMailbox2AbortCallback
 1280 00f8 00000000 		.word	HAL_CAN_RxFifo0MsgPendingCallback
 1281 00fc 00000000 		.word	HAL_CAN_RxFifo0FullCallback
 1282 0100 00000000 		.word	HAL_CAN_RxFifo1MsgPendingCallback
 1283 0104 00000000 		.word	HAL_CAN_RxFifo1FullCallback
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 70


 1284 0108 00000000 		.word	HAL_CAN_SleepCallback
 1285 010c 00000000 		.word	HAL_CAN_WakeUpFromRxMsgCallback
 1286 0110 00000000 		.word	HAL_CAN_ErrorCallback
 1287 0114 00000000 		.word	HAL_CAN_MspInit
 1288 0118 00000000 		.word	HAL_CAN_MspDeInit
 1289              		.cfi_endproc
 1290              	.LFE70:
 1292              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 1293              		.align	1
 1294              		.global	HAL_CAN_ConfigFilter
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1299              	HAL_CAN_ConfigFilter:
 1300              	.LVL52:
 1301              	.LFB71:
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos;
 1302              		.loc 1 840 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 1306              		.loc 1 841 3 view .LVU411
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1307              		.loc 1 842 3 view .LVU412
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1308              		.loc 1 842 16 is_stmt 0 view .LVU413
 1309 0000 0268     		ldr	r2, [r0]
 1310              	.LVL53:
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1311              		.loc 1 843 3 is_stmt 1 view .LVU414
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1312              		.loc 1 843 24 is_stmt 0 view .LVU415
 1313 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1314              	.LVL54:
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1315              		.loc 1 845 3 is_stmt 1 view .LVU416
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1316              		.loc 1 845 38 is_stmt 0 view .LVU417
 1317 0006 013B     		subs	r3, r3, #1
 1318              	.LVL55:
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1319              		.loc 1 845 38 view .LVU418
 1320 0008 DBB2     		uxtb	r3, r3
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1321              		.loc 1 845 6 view .LVU419
 1322 000a 012B     		cmp	r3, #1
 1323 000c 05D9     		bls	.L125
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1324              		.loc 1 962 5 is_stmt 1 view .LVU420
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1325              		.loc 1 962 9 is_stmt 0 view .LVU421
 1326 000e 436A     		ldr	r3, [r0, #36]
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1327              		.loc 1 962 21 view .LVU422
 1328 0010 43F48023 		orr	r3, r3, #262144
 1329 0014 4362     		str	r3, [r0, #36]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 71


 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1330              		.loc 1 964 5 is_stmt 1 view .LVU423
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1331              		.loc 1 964 12 is_stmt 0 view .LVU424
 1332 0016 0120     		movs	r0, #1
 1333              	.LVL56:
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1334              		.loc 1 966 1 view .LVU425
 1335 0018 7047     		bx	lr
 1336              	.LVL57:
 1337              	.L125:
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos;
 1338              		.loc 1 840 1 view .LVU426
 1339 001a 10B5     		push	{r4, lr}
 1340              	.LCFI6:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 4, -8
 1343              		.cfi_offset 14, -4
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 1344              		.loc 1 849 5 is_stmt 1 view .LVU427
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 1345              		.loc 1 850 5 view .LVU428
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 1346              		.loc 1 851 5 view .LVU429
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 1347              		.loc 1 852 5 view .LVU430
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 1348              		.loc 1 853 5 view .LVU431
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 1349              		.loc 1 854 5 view .LVU432
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 1350              		.loc 1 855 5 view .LVU433
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1351              		.loc 1 856 5 view .LVU434
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 1352              		.loc 1 870 5 view .LVU435
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1353              		.loc 1 874 5 view .LVU436
 1354 001c D2F80032 		ldr	r3, [r2, #512]
 1355 0020 43F00103 		orr	r3, r3, #1
 1356 0024 C2F80032 		str	r3, [r2, #512]
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1357              		.loc 1 883 5 view .LVU437
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1358              		.loc 1 883 52 is_stmt 0 view .LVU438
 1359 0028 4B69     		ldr	r3, [r1, #20]
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1360              		.loc 1 883 65 view .LVU439
 1361 002a 03F01F03 		and	r3, r3, #31
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1362              		.loc 1 883 21 view .LVU440
 1363 002e 0120     		movs	r0, #1
 1364              	.LVL58:
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1365              		.loc 1 883 21 view .LVU441
 1366 0030 00FA03F3 		lsl	r3, r0, r3
 1367              	.LVL59:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 72


 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1368              		.loc 1 886 5 is_stmt 1 view .LVU442
 1369 0034 D2F81C02 		ldr	r0, [r2, #540]
 1370 0038 6FEA030C 		mvn	ip, r3
 1371 003c 20EA0300 		bic	r0, r0, r3
 1372 0040 C2F81C02 		str	r0, [r2, #540]
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1373              		.loc 1 889 5 view .LVU443
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1374              		.loc 1 889 22 is_stmt 0 view .LVU444
 1375 0044 C869     		ldr	r0, [r1, #28]
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1376              		.loc 1 889 8 view .LVU445
 1377 0046 C0B9     		cbnz	r0, .L113
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1378              		.loc 1 892 7 is_stmt 1 view .LVU446
 1379 0048 D2F80C02 		ldr	r0, [r2, #524]
 1380 004c 0CEA0000 		and	r0, ip, r0
 1381 0050 C2F80C02 		str	r0, [r2, #524]
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 1382              		.loc 1 896 7 view .LVU447
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1383              		.loc 1 898 22 is_stmt 0 view .LVU448
 1384 0054 8C88     		ldrh	r4, [r1, #4]
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 1385              		.loc 1 896 44 view .LVU449
 1386 0056 4869     		ldr	r0, [r1, #20]
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 1387              		.loc 1 897 75 view .LVU450
 1388 0058 D1F80CE0 		ldr	lr, [r1, #12]
 1389 005c 44EA0E44 		orr	r4, r4, lr, lsl #16
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 1390              		.loc 1 896 62 view .LVU451
 1391 0060 4830     		adds	r0, r0, #72
 1392 0062 42F83040 		str	r4, [r2, r0, lsl #3]
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1393              		.loc 1 902 7 is_stmt 1 view .LVU452
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1394              		.loc 1 904 22 is_stmt 0 view .LVU453
 1395 0066 0C88     		ldrh	r4, [r1]
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1396              		.loc 1 902 44 view .LVU454
 1397 0068 4869     		ldr	r0, [r1, #20]
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 1398              		.loc 1 903 76 view .LVU455
 1399 006a D1F808E0 		ldr	lr, [r1, #8]
 1400 006e 44EA0E44 		orr	r4, r4, lr, lsl #16
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1401              		.loc 1 902 62 view .LVU456
 1402 0072 4830     		adds	r0, r0, #72
 1403 0074 02EBC000 		add	r0, r2, r0, lsl #3
 1404 0078 4460     		str	r4, [r0, #4]
 1405              	.L113:
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1406              		.loc 1 907 5 is_stmt 1 view .LVU457
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1407              		.loc 1 907 22 is_stmt 0 view .LVU458
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 73


 1408 007a C869     		ldr	r0, [r1, #28]
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1409              		.loc 1 907 8 view .LVU459
 1410 007c 0128     		cmp	r0, #1
 1411 007e 1AD0     		beq	.L126
 1412              	.L114:
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1413              		.loc 1 924 5 is_stmt 1 view .LVU460
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1414              		.loc 1 924 22 is_stmt 0 view .LVU461
 1415 0080 8869     		ldr	r0, [r1, #24]
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1416              		.loc 1 924 8 view .LVU462
 1417 0082 88BB     		cbnz	r0, .L115
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1418              		.loc 1 927 7 is_stmt 1 view .LVU463
 1419 0084 D2F80402 		ldr	r0, [r2, #516]
 1420 0088 0CEA0000 		and	r0, ip, r0
 1421 008c C2F80402 		str	r0, [r2, #516]
 1422              	.L116:
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1423              		.loc 1 936 5 view .LVU464
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1424              		.loc 1 936 22 is_stmt 0 view .LVU465
 1425 0090 0869     		ldr	r0, [r1, #16]
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1426              		.loc 1 936 8 view .LVU466
 1427 0092 78BB     		cbnz	r0, .L117
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1428              		.loc 1 939 7 is_stmt 1 view .LVU467
 1429 0094 D2F81402 		ldr	r0, [r2, #532]
 1430 0098 0CEA0000 		and	r0, ip, r0
 1431 009c C2F81402 		str	r0, [r2, #532]
 1432              	.L118:
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1433              		.loc 1 948 5 view .LVU468
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1434              		.loc 1 948 22 is_stmt 0 view .LVU469
 1435 00a0 096A     		ldr	r1, [r1, #32]
 1436              	.LVL60:
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1437              		.loc 1 948 8 view .LVU470
 1438 00a2 0129     		cmp	r1, #1
 1439 00a4 2CD0     		beq	.L127
 1440              	.LVL61:
 1441              	.L119:
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1442              		.loc 1 954 5 is_stmt 1 view .LVU471
 1443 00a6 D2F80032 		ldr	r3, [r2, #512]
 1444 00aa 23F00103 		bic	r3, r3, #1
 1445 00ae C2F80032 		str	r3, [r2, #512]
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1446              		.loc 1 957 5 view .LVU472
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1447              		.loc 1 957 12 is_stmt 0 view .LVU473
 1448 00b2 0020     		movs	r0, #0
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 74


 1449              		.loc 1 966 1 view .LVU474
 1450 00b4 10BD     		pop	{r4, pc}
 1451              	.LVL62:
 1452              	.L126:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1453              		.loc 1 910 7 is_stmt 1 view .LVU475
 1454 00b6 D2F80C02 		ldr	r0, [r2, #524]
 1455 00ba 1843     		orrs	r0, r0, r3
 1456 00bc C2F80C02 		str	r0, [r2, #524]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 1457              		.loc 1 913 7 view .LVU476
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1458              		.loc 1 915 22 is_stmt 0 view .LVU477
 1459 00c0 8C88     		ldrh	r4, [r1, #4]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 1460              		.loc 1 913 44 view .LVU478
 1461 00c2 4869     		ldr	r0, [r1, #20]
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 1462              		.loc 1 914 72 view .LVU479
 1463 00c4 D1F800E0 		ldr	lr, [r1]
 1464 00c8 44EA0E44 		orr	r4, r4, lr, lsl #16
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 1465              		.loc 1 913 62 view .LVU480
 1466 00cc 4830     		adds	r0, r0, #72
 1467 00ce 42F83040 		str	r4, [r2, r0, lsl #3]
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1468              		.loc 1 918 7 is_stmt 1 view .LVU481
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1469              		.loc 1 920 22 is_stmt 0 view .LVU482
 1470 00d2 8C89     		ldrh	r4, [r1, #12]
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1471              		.loc 1 918 44 view .LVU483
 1472 00d4 4869     		ldr	r0, [r1, #20]
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 1473              		.loc 1 919 76 view .LVU484
 1474 00d6 D1F808E0 		ldr	lr, [r1, #8]
 1475 00da 44EA0E44 		orr	r4, r4, lr, lsl #16
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1476              		.loc 1 918 62 view .LVU485
 1477 00de 4830     		adds	r0, r0, #72
 1478 00e0 02EBC000 		add	r0, r2, r0, lsl #3
 1479 00e4 4460     		str	r4, [r0, #4]
 1480 00e6 CBE7     		b	.L114
 1481              	.L115:
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1482              		.loc 1 932 7 is_stmt 1 view .LVU486
 1483 00e8 D2F80402 		ldr	r0, [r2, #516]
 1484 00ec 1843     		orrs	r0, r0, r3
 1485 00ee C2F80402 		str	r0, [r2, #516]
 1486 00f2 CDE7     		b	.L116
 1487              	.L117:
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1488              		.loc 1 944 7 view .LVU487
 1489 00f4 D2F81402 		ldr	r0, [r2, #532]
 1490 00f8 1843     		orrs	r0, r0, r3
 1491 00fa C2F81402 		str	r0, [r2, #532]
 1492 00fe CFE7     		b	.L118
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 75


 1493              	.LVL63:
 1494              	.L127:
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1495              		.loc 1 950 7 view .LVU488
 1496 0100 D2F81C12 		ldr	r1, [r2, #540]
 1497 0104 0B43     		orrs	r3, r3, r1
 1498              	.LVL64:
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1499              		.loc 1 950 7 is_stmt 0 view .LVU489
 1500 0106 C2F81C32 		str	r3, [r2, #540]
 1501 010a CCE7     		b	.L119
 1502              		.cfi_endproc
 1503              	.LFE71:
 1505              		.section	.text.HAL_CAN_Start,"ax",%progbits
 1506              		.align	1
 1507              		.global	HAL_CAN_Start
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1512              	HAL_CAN_Start:
 1513              	.LVL65:
 1514              	.LFB72:
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1515              		.loc 1 1006 1 is_stmt 1 view -0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1519              		.loc 1 1006 1 is_stmt 0 view .LVU491
 1520 0000 70B5     		push	{r4, r5, r6, lr}
 1521              	.LCFI7:
 1522              		.cfi_def_cfa_offset 16
 1523              		.cfi_offset 4, -16
 1524              		.cfi_offset 5, -12
 1525              		.cfi_offset 6, -8
 1526              		.cfi_offset 14, -4
 1527 0002 0446     		mov	r4, r0
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1528              		.loc 1 1007 3 is_stmt 1 view .LVU492
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1529              		.loc 1 1009 3 view .LVU493
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1530              		.loc 1 1009 11 is_stmt 0 view .LVU494
 1531 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 1532 0008 EDB2     		uxtb	r5, r5
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1533              		.loc 1 1009 6 view .LVU495
 1534 000a 012D     		cmp	r5, #1
 1535 000c 06D0     		beq	.L134
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1536              		.loc 1 1045 5 is_stmt 1 view .LVU496
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1537              		.loc 1 1045 9 is_stmt 0 view .LVU497
 1538 000e 436A     		ldr	r3, [r0, #36]
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1539              		.loc 1 1045 21 view .LVU498
 1540 0010 43F40023 		orr	r3, r3, #524288
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 76


 1541 0014 4362     		str	r3, [r0, #36]
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1542              		.loc 1 1047 5 is_stmt 1 view .LVU499
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1543              		.loc 1 1047 12 is_stmt 0 view .LVU500
 1544 0016 0125     		movs	r5, #1
 1545              	.LVL66:
 1546              	.L131:
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1547              		.loc 1 1049 1 view .LVU501
 1548 0018 2846     		mov	r0, r5
 1549 001a 70BD     		pop	{r4, r5, r6, pc}
 1550              	.LVL67:
 1551              	.L134:
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1552              		.loc 1 1012 5 is_stmt 1 view .LVU502
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1553              		.loc 1 1012 17 is_stmt 0 view .LVU503
 1554 001c 0223     		movs	r3, #2
 1555 001e 80F82030 		strb	r3, [r0, #32]
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1556              		.loc 1 1015 5 is_stmt 1 view .LVU504
 1557 0022 0268     		ldr	r2, [r0]
 1558 0024 1368     		ldr	r3, [r2]
 1559 0026 23F00103 		bic	r3, r3, #1
 1560 002a 1360     		str	r3, [r2]
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1561              		.loc 1 1018 5 view .LVU505
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1562              		.loc 1 1018 17 is_stmt 0 view .LVU506
 1563 002c FFF7FEFF 		bl	HAL_GetTick
 1564              	.LVL68:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1565              		.loc 1 1018 17 view .LVU507
 1566 0030 0646     		mov	r6, r0
 1567              	.LVL69:
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1568              		.loc 1 1021 5 is_stmt 1 view .LVU508
 1569              	.L130:
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1570              		.loc 1 1021 49 view .LVU509
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1571              		.loc 1 1021 17 is_stmt 0 view .LVU510
 1572 0032 2368     		ldr	r3, [r4]
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1573              		.loc 1 1021 27 view .LVU511
 1574 0034 5B68     		ldr	r3, [r3, #4]
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1575              		.loc 1 1021 49 view .LVU512
 1576 0036 13F0010F 		tst	r3, #1
 1577 003a 0CD0     		beq	.L135
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1578              		.loc 1 1024 7 is_stmt 1 view .LVU513
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1579              		.loc 1 1024 12 is_stmt 0 view .LVU514
 1580 003c FFF7FEFF 		bl	HAL_GetTick
 1581              	.LVL70:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 77


1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1582              		.loc 1 1024 26 view .LVU515
 1583 0040 831B     		subs	r3, r0, r6
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1584              		.loc 1 1024 10 view .LVU516
 1585 0042 0A2B     		cmp	r3, #10
 1586 0044 F5D9     		bls	.L130
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1587              		.loc 1 1027 9 is_stmt 1 view .LVU517
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1588              		.loc 1 1027 13 is_stmt 0 view .LVU518
 1589 0046 636A     		ldr	r3, [r4, #36]
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1590              		.loc 1 1027 25 view .LVU519
 1591 0048 43F40033 		orr	r3, r3, #131072
 1592 004c 6362     		str	r3, [r4, #36]
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1593              		.loc 1 1030 9 is_stmt 1 view .LVU520
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1594              		.loc 1 1030 21 is_stmt 0 view .LVU521
 1595 004e 0523     		movs	r3, #5
 1596 0050 84F82030 		strb	r3, [r4, #32]
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1597              		.loc 1 1032 9 is_stmt 1 view .LVU522
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1598              		.loc 1 1032 16 is_stmt 0 view .LVU523
 1599 0054 E0E7     		b	.L131
 1600              	.L135:
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1601              		.loc 1 1037 5 is_stmt 1 view .LVU524
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1602              		.loc 1 1037 21 is_stmt 0 view .LVU525
 1603 0056 0025     		movs	r5, #0
 1604 0058 6562     		str	r5, [r4, #36]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1605              		.loc 1 1040 5 is_stmt 1 view .LVU526
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1606              		.loc 1 1040 12 is_stmt 0 view .LVU527
 1607 005a DDE7     		b	.L131
 1608              		.cfi_endproc
 1609              	.LFE72:
 1611              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 1612              		.align	1
 1613              		.global	HAL_CAN_Stop
 1614              		.syntax unified
 1615              		.thumb
 1616              		.thumb_func
 1618              	HAL_CAN_Stop:
 1619              	.LVL71:
 1620              	.LFB73:
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1621              		.loc 1 1058 1 is_stmt 1 view -0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1625              		.loc 1 1058 1 is_stmt 0 view .LVU529
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 78


 1626 0000 38B5     		push	{r3, r4, r5, lr}
 1627              	.LCFI8:
 1628              		.cfi_def_cfa_offset 16
 1629              		.cfi_offset 3, -16
 1630              		.cfi_offset 4, -12
 1631              		.cfi_offset 5, -8
 1632              		.cfi_offset 14, -4
 1633 0002 0446     		mov	r4, r0
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1634              		.loc 1 1059 3 is_stmt 1 view .LVU530
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1635              		.loc 1 1061 3 view .LVU531
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1636              		.loc 1 1061 11 is_stmt 0 view .LVU532
 1637 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1638 0008 DBB2     		uxtb	r3, r3
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1639              		.loc 1 1061 6 view .LVU533
 1640 000a 022B     		cmp	r3, #2
 1641 000c 05D0     		beq	.L142
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1642              		.loc 1 1097 5 is_stmt 1 view .LVU534
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1643              		.loc 1 1097 9 is_stmt 0 view .LVU535
 1644 000e 436A     		ldr	r3, [r0, #36]
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1645              		.loc 1 1097 21 view .LVU536
 1646 0010 43F48013 		orr	r3, r3, #1048576
 1647 0014 4362     		str	r3, [r0, #36]
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1648              		.loc 1 1099 5 is_stmt 1 view .LVU537
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1649              		.loc 1 1099 12 is_stmt 0 view .LVU538
 1650 0016 0120     		movs	r0, #1
 1651              	.LVL72:
 1652              	.L139:
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1653              		.loc 1 1101 1 view .LVU539
 1654 0018 38BD     		pop	{r3, r4, r5, pc}
 1655              	.LVL73:
 1656              	.L142:
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1657              		.loc 1 1064 5 is_stmt 1 view .LVU540
 1658 001a 0268     		ldr	r2, [r0]
 1659 001c 1368     		ldr	r3, [r2]
 1660 001e 43F00103 		orr	r3, r3, #1
 1661 0022 1360     		str	r3, [r2]
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1662              		.loc 1 1067 5 view .LVU541
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1663              		.loc 1 1067 17 is_stmt 0 view .LVU542
 1664 0024 FFF7FEFF 		bl	HAL_GetTick
 1665              	.LVL74:
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1666              		.loc 1 1067 17 view .LVU543
 1667 0028 0546     		mov	r5, r0
 1668              	.LVL75:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 79


1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1669              		.loc 1 1070 5 is_stmt 1 view .LVU544
 1670              	.L138:
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1671              		.loc 1 1070 49 view .LVU545
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1672              		.loc 1 1070 17 is_stmt 0 view .LVU546
 1673 002a 2368     		ldr	r3, [r4]
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1674              		.loc 1 1070 27 view .LVU547
 1675 002c 5A68     		ldr	r2, [r3, #4]
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1676              		.loc 1 1070 49 view .LVU548
 1677 002e 12F0010F 		tst	r2, #1
 1678 0032 0DD1     		bne	.L143
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1679              		.loc 1 1073 7 is_stmt 1 view .LVU549
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1680              		.loc 1 1073 12 is_stmt 0 view .LVU550
 1681 0034 FFF7FEFF 		bl	HAL_GetTick
 1682              	.LVL76:
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1683              		.loc 1 1073 26 view .LVU551
 1684 0038 431B     		subs	r3, r0, r5
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1685              		.loc 1 1073 10 view .LVU552
 1686 003a 0A2B     		cmp	r3, #10
 1687 003c F5D9     		bls	.L138
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1688              		.loc 1 1076 9 is_stmt 1 view .LVU553
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1689              		.loc 1 1076 13 is_stmt 0 view .LVU554
 1690 003e 636A     		ldr	r3, [r4, #36]
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1691              		.loc 1 1076 25 view .LVU555
 1692 0040 43F40033 		orr	r3, r3, #131072
 1693 0044 6362     		str	r3, [r4, #36]
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1694              		.loc 1 1079 9 is_stmt 1 view .LVU556
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1695              		.loc 1 1079 21 is_stmt 0 view .LVU557
 1696 0046 0523     		movs	r3, #5
 1697 0048 84F82030 		strb	r3, [r4, #32]
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1698              		.loc 1 1081 9 is_stmt 1 view .LVU558
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1699              		.loc 1 1081 16 is_stmt 0 view .LVU559
 1700 004c 0120     		movs	r0, #1
 1701 004e E3E7     		b	.L139
 1702              	.L143:
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1703              		.loc 1 1086 5 is_stmt 1 view .LVU560
 1704 0050 1A68     		ldr	r2, [r3]
 1705 0052 22F00202 		bic	r2, r2, #2
 1706 0056 1A60     		str	r2, [r3]
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1707              		.loc 1 1089 5 view .LVU561
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 80


1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1708              		.loc 1 1089 17 is_stmt 0 view .LVU562
 1709 0058 0123     		movs	r3, #1
 1710 005a 84F82030 		strb	r3, [r4, #32]
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1711              		.loc 1 1092 5 is_stmt 1 view .LVU563
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1712              		.loc 1 1092 12 is_stmt 0 view .LVU564
 1713 005e 0020     		movs	r0, #0
 1714 0060 DAE7     		b	.L139
 1715              		.cfi_endproc
 1716              	.LFE73:
 1718              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 1719              		.align	1
 1720              		.global	HAL_CAN_DeInit
 1721              		.syntax unified
 1722              		.thumb
 1723              		.thumb_func
 1725              	HAL_CAN_DeInit:
 1726              	.LVL77:
 1727              	.LFB66:
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 1728              		.loc 1 460 1 is_stmt 1 view -0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1732              		.loc 1 462 3 view .LVU566
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1733              		.loc 1 462 6 is_stmt 0 view .LVU567
 1734 0000 A8B1     		cbz	r0, .L147
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 1735              		.loc 1 460 1 view .LVU568
 1736 0002 10B5     		push	{r4, lr}
 1737              	.LCFI9:
 1738              		.cfi_def_cfa_offset 8
 1739              		.cfi_offset 4, -8
 1740              		.cfi_offset 14, -4
 1741 0004 0446     		mov	r4, r0
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1742              		.loc 1 468 3 is_stmt 1 view .LVU569
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1743              		.loc 1 471 3 view .LVU570
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1744              		.loc 1 471 9 is_stmt 0 view .LVU571
 1745 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 1746              	.LVL78:
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1747              		.loc 1 474 3 is_stmt 1 view .LVU572
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1748              		.loc 1 474 11 is_stmt 0 view .LVU573
 1749 000a 236E     		ldr	r3, [r4, #96]
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1750              		.loc 1 474 6 view .LVU574
 1751 000c 63B1     		cbz	r3, .L152
 1752              	.L146:
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 81


 1753              		.loc 1 480 3 is_stmt 1 view .LVU575
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1754              		.loc 1 480 7 is_stmt 0 view .LVU576
 1755 000e 236E     		ldr	r3, [r4, #96]
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1756              		.loc 1 480 3 view .LVU577
 1757 0010 2046     		mov	r0, r4
 1758 0012 9847     		blx	r3
 1759              	.LVL79:
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1760              		.loc 1 488 3 is_stmt 1 view .LVU578
 1761 0014 2268     		ldr	r2, [r4]
 1762 0016 1368     		ldr	r3, [r2]
 1763 0018 43F40043 		orr	r3, r3, #32768
 1764 001c 1360     		str	r3, [r2]
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1765              		.loc 1 491 3 view .LVU579
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1766              		.loc 1 491 19 is_stmt 0 view .LVU580
 1767 001e 0020     		movs	r0, #0
 1768 0020 6062     		str	r0, [r4, #36]
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1769              		.loc 1 494 3 is_stmt 1 view .LVU581
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1770              		.loc 1 494 15 is_stmt 0 view .LVU582
 1771 0022 84F82000 		strb	r0, [r4, #32]
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1772              		.loc 1 497 3 is_stmt 1 view .LVU583
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1773              		.loc 1 498 1 is_stmt 0 view .LVU584
 1774 0026 10BD     		pop	{r4, pc}
 1775              	.LVL80:
 1776              	.L152:
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1777              		.loc 1 476 5 is_stmt 1 view .LVU585
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1778              		.loc 1 476 29 is_stmt 0 view .LVU586
 1779 0028 024B     		ldr	r3, .L153
 1780 002a 2366     		str	r3, [r4, #96]
 1781 002c EFE7     		b	.L146
 1782              	.LVL81:
 1783              	.L147:
 1784              	.LCFI10:
 1785              		.cfi_def_cfa_offset 0
 1786              		.cfi_restore 4
 1787              		.cfi_restore 14
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1788              		.loc 1 464 12 view .LVU587
 1789 002e 0120     		movs	r0, #1
 1790              	.LVL82:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1791              		.loc 1 498 1 view .LVU588
 1792 0030 7047     		bx	lr
 1793              	.L154:
 1794 0032 00BF     		.align	2
 1795              	.L153:
 1796 0034 00000000 		.word	HAL_CAN_MspDeInit
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 82


 1797              		.cfi_endproc
 1798              	.LFE66:
 1800              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 1801              		.align	1
 1802              		.global	HAL_CAN_RequestSleep
 1803              		.syntax unified
 1804              		.thumb
 1805              		.thumb_func
 1807              	HAL_CAN_RequestSleep:
 1808              	.LVL83:
 1809              	.LFB74:
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1810              		.loc 1 1113 1 is_stmt 1 view -0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 0, uses_anonymous_args = 0
 1814              		@ link register save eliminated.
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1815              		.loc 1 1114 3 view .LVU590
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1816              		.loc 1 1114 24 is_stmt 0 view .LVU591
 1817 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1818              	.LVL84:
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1819              		.loc 1 1116 3 is_stmt 1 view .LVU592
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1820              		.loc 1 1116 38 is_stmt 0 view .LVU593
 1821 0004 013B     		subs	r3, r3, #1
 1822              	.LVL85:
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1823              		.loc 1 1116 38 view .LVU594
 1824 0006 DBB2     		uxtb	r3, r3
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1825              		.loc 1 1116 6 view .LVU595
 1826 0008 012B     		cmp	r3, #1
 1827 000a 05D9     		bls	.L158
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1828              		.loc 1 1128 5 is_stmt 1 view .LVU596
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1829              		.loc 1 1128 9 is_stmt 0 view .LVU597
 1830 000c 436A     		ldr	r3, [r0, #36]
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1831              		.loc 1 1128 21 view .LVU598
 1832 000e 43F48023 		orr	r3, r3, #262144
 1833 0012 4362     		str	r3, [r0, #36]
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1834              		.loc 1 1131 5 is_stmt 1 view .LVU599
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1835              		.loc 1 1131 12 is_stmt 0 view .LVU600
 1836 0014 0120     		movs	r0, #1
 1837              	.LVL86:
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1838              		.loc 1 1133 1 view .LVU601
 1839 0016 7047     		bx	lr
 1840              	.LVL87:
 1841              	.L158:
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 83


 1842              		.loc 1 1120 5 is_stmt 1 view .LVU602
 1843 0018 0268     		ldr	r2, [r0]
 1844 001a 1368     		ldr	r3, [r2]
 1845 001c 43F00203 		orr	r3, r3, #2
 1846 0020 1360     		str	r3, [r2]
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1847              		.loc 1 1123 5 view .LVU603
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1848              		.loc 1 1123 12 is_stmt 0 view .LVU604
 1849 0022 0020     		movs	r0, #0
 1850              	.LVL88:
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1851              		.loc 1 1123 12 view .LVU605
 1852 0024 7047     		bx	lr
 1853              		.cfi_endproc
 1854              	.LFE74:
 1856              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1857              		.align	1
 1858              		.global	HAL_CAN_WakeUp
 1859              		.syntax unified
 1860              		.thumb
 1861              		.thumb_func
 1863              	HAL_CAN_WakeUp:
 1864              	.LVL89:
 1865              	.LFB75:
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __IO uint32_t count = 0;
 1866              		.loc 1 1144 1 is_stmt 1 view -0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 8
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
 1870              		@ link register save eliminated.
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __IO uint32_t count = 0;
 1871              		.loc 1 1144 1 is_stmt 0 view .LVU607
 1872 0000 82B0     		sub	sp, sp, #8
 1873              	.LCFI11:
 1874              		.cfi_def_cfa_offset 8
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timeout = 1000000U;
 1875              		.loc 1 1145 3 is_stmt 1 view .LVU608
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timeout = 1000000U;
 1876              		.loc 1 1145 17 is_stmt 0 view .LVU609
 1877 0002 0023     		movs	r3, #0
 1878 0004 0193     		str	r3, [sp, #4]
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1879              		.loc 1 1146 3 is_stmt 1 view .LVU610
 1880              	.LVL90:
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1881              		.loc 1 1147 3 view .LVU611
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1882              		.loc 1 1147 24 is_stmt 0 view .LVU612
 1883 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1884              	.LVL91:
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1885              		.loc 1 1149 3 is_stmt 1 view .LVU613
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1886              		.loc 1 1149 38 is_stmt 0 view .LVU614
 1887 000a 013B     		subs	r3, r3, #1
 1888              	.LVL92:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 84


1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1889              		.loc 1 1149 38 view .LVU615
 1890 000c DBB2     		uxtb	r3, r3
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1891              		.loc 1 1149 6 view .LVU616
 1892 000e 012B     		cmp	r3, #1
 1893 0010 18D8     		bhi	.L160
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1894              		.loc 1 1153 5 is_stmt 1 view .LVU617
 1895 0012 0268     		ldr	r2, [r0]
 1896 0014 1368     		ldr	r3, [r2]
 1897 0016 23F00203 		bic	r3, r3, #2
 1898 001a 1360     		str	r3, [r2]
 1899              	.L163:
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1900              		.loc 1 1156 5 view .LVU618
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1901              		.loc 1 1159 7 view .LVU619
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1902              		.loc 1 1159 12 is_stmt 0 view .LVU620
 1903 001c 019B     		ldr	r3, [sp, #4]
 1904 001e 0133     		adds	r3, r3, #1
 1905 0020 0193     		str	r3, [sp, #4]
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1906              		.loc 1 1162 7 is_stmt 1 view .LVU621
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1907              		.loc 1 1162 17 is_stmt 0 view .LVU622
 1908 0022 019A     		ldr	r2, [sp, #4]
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1909              		.loc 1 1162 10 view .LVU623
 1910 0024 0B4B     		ldr	r3, .L166
 1911 0026 9A42     		cmp	r2, r3
 1912 0028 06D8     		bhi	.L165
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1913              		.loc 1 1170 49 is_stmt 1 view .LVU624
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1914              		.loc 1 1170 17 is_stmt 0 view .LVU625
 1915 002a 0368     		ldr	r3, [r0]
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1916              		.loc 1 1170 27 view .LVU626
 1917 002c 5B68     		ldr	r3, [r3, #4]
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1918              		.loc 1 1170 49 view .LVU627
 1919 002e 13F0020F 		tst	r3, #2
 1920 0032 F3D1     		bne	.L163
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1921              		.loc 1 1173 12 view .LVU628
 1922 0034 0020     		movs	r0, #0
 1923              	.LVL93:
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1924              		.loc 1 1173 12 view .LVU629
 1925 0036 0AE0     		b	.L162
 1926              	.LVL94:
 1927              	.L165:
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1928              		.loc 1 1165 9 is_stmt 1 view .LVU630
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 85


 1929              		.loc 1 1165 13 is_stmt 0 view .LVU631
 1930 0038 436A     		ldr	r3, [r0, #36]
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1931              		.loc 1 1165 25 view .LVU632
 1932 003a 43F40033 		orr	r3, r3, #131072
 1933 003e 4362     		str	r3, [r0, #36]
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1934              		.loc 1 1167 9 is_stmt 1 view .LVU633
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1935              		.loc 1 1167 16 is_stmt 0 view .LVU634
 1936 0040 0120     		movs	r0, #1
 1937              	.LVL95:
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1938              		.loc 1 1167 16 view .LVU635
 1939 0042 04E0     		b	.L162
 1940              	.LVL96:
 1941              	.L160:
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1942              		.loc 1 1178 5 is_stmt 1 view .LVU636
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1943              		.loc 1 1178 9 is_stmt 0 view .LVU637
 1944 0044 436A     		ldr	r3, [r0, #36]
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1945              		.loc 1 1178 21 view .LVU638
 1946 0046 43F48023 		orr	r3, r3, #262144
 1947 004a 4362     		str	r3, [r0, #36]
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1948              		.loc 1 1180 5 is_stmt 1 view .LVU639
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1949              		.loc 1 1180 12 is_stmt 0 view .LVU640
 1950 004c 0120     		movs	r0, #1
 1951              	.LVL97:
 1952              	.L162:
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1953              		.loc 1 1182 1 view .LVU641
 1954 004e 02B0     		add	sp, sp, #8
 1955              	.LCFI12:
 1956              		.cfi_def_cfa_offset 0
 1957              		@ sp needed
 1958 0050 7047     		bx	lr
 1959              	.L167:
 1960 0052 00BF     		.align	2
 1961              	.L166:
 1962 0054 40420F00 		.word	1000000
 1963              		.cfi_endproc
 1964              	.LFE75:
 1966              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1967              		.align	1
 1968              		.global	HAL_CAN_IsSleepActive
 1969              		.syntax unified
 1970              		.thumb
 1971              		.thumb_func
 1973              	HAL_CAN_IsSleepActive:
 1974              	.LVL98:
 1975              	.LFB76:
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
 1976              		.loc 1 1193 1 is_stmt 1 view -0
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 86


 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 0
 1979              		@ frame_needed = 0, uses_anonymous_args = 0
 1980              		@ link register save eliminated.
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1981              		.loc 1 1194 3 view .LVU643
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1982              		.loc 1 1195 3 view .LVU644
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1983              		.loc 1 1195 24 is_stmt 0 view .LVU645
 1984 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1985              	.LVL99:
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1986              		.loc 1 1197 3 is_stmt 1 view .LVU646
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1987              		.loc 1 1197 38 is_stmt 0 view .LVU647
 1988 0004 013B     		subs	r3, r3, #1
 1989              	.LVL100:
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1990              		.loc 1 1197 38 view .LVU648
 1991 0006 DBB2     		uxtb	r3, r3
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1992              		.loc 1 1197 6 view .LVU649
 1993 0008 012B     		cmp	r3, #1
 1994 000a 01D9     		bls	.L172
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1995              		.loc 1 1194 12 view .LVU650
 1996 000c 0020     		movs	r0, #0
 1997              	.LVL101:
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1998              		.loc 1 1194 12 view .LVU651
 1999 000e 7047     		bx	lr
 2000              	.LVL102:
 2001              	.L172:
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2002              		.loc 1 1201 5 is_stmt 1 view .LVU652
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2003              		.loc 1 1201 14 is_stmt 0 view .LVU653
 2004 0010 0368     		ldr	r3, [r0]
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2005              		.loc 1 1201 24 view .LVU654
 2006 0012 5868     		ldr	r0, [r3, #4]
 2007              	.LVL103:
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2008              		.loc 1 1201 8 view .LVU655
 2009 0014 10F00200 		ands	r0, r0, #2
 2010 0018 00D1     		bne	.L171
 2011 001a 7047     		bx	lr
 2012              	.L171:
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2013              		.loc 1 1203 14 view .LVU656
 2014 001c 0120     		movs	r0, #1
 2015              	.LVL104:
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2016              		.loc 1 1208 3 is_stmt 1 view .LVU657
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2017              		.loc 1 1209 1 is_stmt 0 view .LVU658
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 87


 2018 001e 7047     		bx	lr
 2019              		.cfi_endproc
 2020              	.LFE76:
 2022              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 2023              		.align	1
 2024              		.global	HAL_CAN_AddTxMessage
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2029              	HAL_CAN_AddTxMessage:
 2030              	.LVL105:
 2031              	.LFB77:
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2032              		.loc 1 1225 1 is_stmt 1 view -0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2036              		.loc 1 1225 1 is_stmt 0 view .LVU660
 2037 0000 30B5     		push	{r4, r5, lr}
 2038              	.LCFI13:
 2039              		.cfi_def_cfa_offset 12
 2040              		.cfi_offset 4, -12
 2041              		.cfi_offset 5, -8
 2042              		.cfi_offset 14, -4
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2043              		.loc 1 1226 3 is_stmt 1 view .LVU661
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 2044              		.loc 1 1227 3 view .LVU662
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 2045              		.loc 1 1227 24 is_stmt 0 view .LVU663
 2046 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 2047              	.LVL106:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2048              		.loc 1 1228 3 is_stmt 1 view .LVU664
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2049              		.loc 1 1228 12 is_stmt 0 view .LVU665
 2050 0006 0468     		ldr	r4, [r0]
 2051 0008 A468     		ldr	r4, [r4, #8]
 2052              	.LVL107:
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 2053              		.loc 1 1231 3 is_stmt 1 view .LVU666
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 2054              		.loc 1 1232 3 view .LVU667
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 2055              		.loc 1 1233 3 view .LVU668
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2056              		.loc 1 1234 3 view .LVU669
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2057              		.loc 1 1240 5 view .LVU670
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2058              		.loc 1 1242 3 view .LVU671
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2059              		.loc 1 1244 3 view .LVU672
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2060              		.loc 1 1244 38 is_stmt 0 view .LVU673
 2061 000a 0CF1FF3C 		add	ip, ip, #-1
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 88


 2062              	.LVL108:
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2063              		.loc 1 1244 38 view .LVU674
 2064 000e 5FFA8CFC 		uxtb	ip, ip
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2065              		.loc 1 1244 6 view .LVU675
 2066 0012 BCF1010F 		cmp	ip, #1
 2067 0016 62D8     		bhi	.L174
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 2068              		.loc 1 1248 5 is_stmt 1 view .LVU676
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 2069              		.loc 1 1248 8 is_stmt 0 view .LVU677
 2070 0018 14F0E05F 		tst	r4, #469762048
 2071 001c 59D0     		beq	.L175
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2072              		.loc 1 1253 7 is_stmt 1 view .LVU678
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2073              		.loc 1 1253 23 is_stmt 0 view .LVU679
 2074 001e C4F3016C 		ubfx	ip, r4, #24, #2
 2075              	.LVL109:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2076              		.loc 1 1256 7 is_stmt 1 view .LVU680
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2077              		.loc 1 1256 33 is_stmt 0 view .LVU681
 2078 0022 0124     		movs	r4, #1
 2079              	.LVL110:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2080              		.loc 1 1256 33 view .LVU682
 2081 0024 04FA0CF4 		lsl	r4, r4, ip
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2082              		.loc 1 1256 19 view .LVU683
 2083 0028 1C60     		str	r4, [r3]
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2084              		.loc 1 1259 7 is_stmt 1 view .LVU684
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2085              		.loc 1 1259 18 is_stmt 0 view .LVU685
 2086 002a 8B68     		ldr	r3, [r1, #8]
 2087              	.LVL111:
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2088              		.loc 1 1259 10 view .LVU686
 2089 002c 002B     		cmp	r3, #0
 2090 002e 3DD1     		bne	.L176
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2091              		.loc 1 1261 9 is_stmt 1 view .LVU687
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2092              		.loc 1 1261 68 is_stmt 0 view .LVU688
 2093 0030 0D68     		ldr	r5, [r1]
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2094              		.loc 1 1262 67 view .LVU689
 2095 0032 CB68     		ldr	r3, [r1, #12]
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2096              		.loc 1 1261 13 view .LVU690
 2097 0034 0468     		ldr	r4, [r0]
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2098              		.loc 1 1261 98 view .LVU691
 2099 0036 43EA4555 		orr	r5, r3, r5, lsl #21
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 89


 2100              		.loc 1 1261 57 view .LVU692
 2101 003a 0CF11803 		add	r3, ip, #24
 2102 003e 1B01     		lsls	r3, r3, #4
 2103 0040 E550     		str	r5, [r4, r3]
 2104              	.L177:
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2105              		.loc 1 1272 7 is_stmt 1 view .LVU693
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2106              		.loc 1 1272 11 is_stmt 0 view .LVU694
 2107 0042 0368     		ldr	r3, [r0]
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2108              		.loc 1 1272 66 view .LVU695
 2109 0044 0C69     		ldr	r4, [r1, #16]
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2110              		.loc 1 1272 56 view .LVU696
 2111 0046 0CF1180E 		add	lr, ip, #24
 2112 004a 03EB0E13 		add	r3, r3, lr, lsl #4
 2113 004e 5C60     		str	r4, [r3, #4]
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2114              		.loc 1 1275 7 is_stmt 1 view .LVU697
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2115              		.loc 1 1275 18 is_stmt 0 view .LVU698
 2116 0050 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2117              		.loc 1 1275 10 view .LVU699
 2118 0052 012B     		cmp	r3, #1
 2119 0054 35D0     		beq	.L181
 2120              	.LVL112:
 2121              	.L178:
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
 2122              		.loc 1 1281 7 is_stmt 1 view .LVU700
 2123 0056 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 2124 0058 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 2125 005a 1B04     		lsls	r3, r3, #16
 2126 005c 43EA0163 		orr	r3, r3, r1, lsl #24
 2127 0060 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 2128 0062 43EA0123 		orr	r3, r3, r1, lsl #8
 2129 0066 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 2130 0068 0168     		ldr	r1, [r0]
 2131 006a 2343     		orrs	r3, r3, r4
 2132 006c 01EB0C11 		add	r1, r1, ip, lsl #4
 2133 0070 C1F88C31 		str	r3, [r1, #396]
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
 2134              		.loc 1 1286 7 view .LVU701
 2135 0074 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 2136 0076 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 2137 0078 1B04     		lsls	r3, r3, #16
 2138 007a 43EA0163 		orr	r3, r3, r1, lsl #24
 2139 007e 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 2140 0080 43EA0123 		orr	r3, r3, r1, lsl #8
 2141 0084 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2142 0086 0268     		ldr	r2, [r0]
 2143              	.LVL113:
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
 2144              		.loc 1 1286 7 is_stmt 0 view .LVU702
 2145 0088 0B43     		orrs	r3, r3, r1
 2146 008a 02EB0C12 		add	r2, r2, ip, lsl #4
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 90


 2147 008e C2F88831 		str	r3, [r2, #392]
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2148              		.loc 1 1293 7 is_stmt 1 view .LVU703
 2149 0092 0268     		ldr	r2, [r0]
 2150 0094 0CF1180C 		add	ip, ip, #24
 2151              	.LVL114:
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2152              		.loc 1 1293 7 is_stmt 0 view .LVU704
 2153 0098 4FEA0C1C 		lsl	ip, ip, #4
 2154 009c 52F80C30 		ldr	r3, [r2, ip]
 2155 00a0 43F00103 		orr	r3, r3, #1
 2156 00a4 42F80C30 		str	r3, [r2, ip]
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2157              		.loc 1 1296 7 is_stmt 1 view .LVU705
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2158              		.loc 1 1296 14 is_stmt 0 view .LVU706
 2159 00a8 0020     		movs	r0, #0
 2160              	.LVL115:
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2161              		.loc 1 1296 14 view .LVU707
 2162 00aa 1DE0     		b	.L179
 2163              	.LVL116:
 2164              	.L176:
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2165              		.loc 1 1266 9 is_stmt 1 view .LVU708
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2166              		.loc 1 1266 68 is_stmt 0 view .LVU709
 2167 00ac 4C68     		ldr	r4, [r1, #4]
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2168              		.loc 1 1266 98 view .LVU710
 2169 00ae 43EAC403 		orr	r3, r3, r4, lsl #3
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2170              		.loc 1 1268 67 view .LVU711
 2171 00b2 CC68     		ldr	r4, [r1, #12]
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2172              		.loc 1 1267 73 view .LVU712
 2173 00b4 2343     		orrs	r3, r3, r4
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2174              		.loc 1 1266 57 view .LVU713
 2175 00b6 0CF11804 		add	r4, ip, #24
 2176 00ba 2401     		lsls	r4, r4, #4
 2177 00bc 0568     		ldr	r5, [r0]
 2178 00be 2B51     		str	r3, [r5, r4]
 2179 00c0 BFE7     		b	.L177
 2180              	.L181:
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2181              		.loc 1 1277 9 is_stmt 1 view .LVU714
 2182 00c2 0368     		ldr	r3, [r0]
 2183 00c4 03EB0E13 		add	r3, r3, lr, lsl #4
 2184 00c8 5968     		ldr	r1, [r3, #4]
 2185              	.LVL117:
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2186              		.loc 1 1277 9 is_stmt 0 view .LVU715
 2187 00ca 41F48071 		orr	r1, r1, #256
 2188 00ce 5960     		str	r1, [r3, #4]
 2189 00d0 C1E7     		b	.L178
 2190              	.LVL118:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 91


 2191              	.L175:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2192              		.loc 1 1301 7 is_stmt 1 view .LVU716
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2193              		.loc 1 1301 11 is_stmt 0 view .LVU717
 2194 00d2 436A     		ldr	r3, [r0, #36]
 2195              	.LVL119:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2196              		.loc 1 1301 23 view .LVU718
 2197 00d4 43F40013 		orr	r3, r3, #2097152
 2198 00d8 4362     		str	r3, [r0, #36]
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2199              		.loc 1 1303 7 is_stmt 1 view .LVU719
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2200              		.loc 1 1303 14 is_stmt 0 view .LVU720
 2201 00da 0120     		movs	r0, #1
 2202              	.LVL120:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2203              		.loc 1 1303 14 view .LVU721
 2204 00dc 04E0     		b	.L179
 2205              	.LVL121:
 2206              	.L174:
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2207              		.loc 1 1309 5 is_stmt 1 view .LVU722
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2208              		.loc 1 1309 9 is_stmt 0 view .LVU723
 2209 00de 436A     		ldr	r3, [r0, #36]
 2210              	.LVL122:
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2211              		.loc 1 1309 21 view .LVU724
 2212 00e0 43F48023 		orr	r3, r3, #262144
 2213 00e4 4362     		str	r3, [r0, #36]
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2214              		.loc 1 1311 5 is_stmt 1 view .LVU725
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2215              		.loc 1 1311 12 is_stmt 0 view .LVU726
 2216 00e6 0120     		movs	r0, #1
 2217              	.LVL123:
 2218              	.L179:
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2219              		.loc 1 1313 1 view .LVU727
 2220 00e8 30BD     		pop	{r4, r5, pc}
 2221              		.cfi_endproc
 2222              	.LFE77:
 2224              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 2225              		.align	1
 2226              		.global	HAL_CAN_AbortTxRequest
 2227              		.syntax unified
 2228              		.thumb
 2229              		.thumb_func
 2231              	HAL_CAN_AbortTxRequest:
 2232              	.LVL124:
 2233              	.LFB78:
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2234              		.loc 1 1324 1 is_stmt 1 view -0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 92


 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2239              		.loc 1 1325 3 view .LVU729
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2240              		.loc 1 1325 24 is_stmt 0 view .LVU730
 2241 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2242              	.LVL125:
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2243              		.loc 1 1328 3 is_stmt 1 view .LVU731
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2244              		.loc 1 1330 3 view .LVU732
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2245              		.loc 1 1330 38 is_stmt 0 view .LVU733
 2246 0004 013B     		subs	r3, r3, #1
 2247              	.LVL126:
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2248              		.loc 1 1330 38 view .LVU734
 2249 0006 DBB2     		uxtb	r3, r3
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2250              		.loc 1 1330 6 view .LVU735
 2251 0008 012B     		cmp	r3, #1
 2252 000a 05D9     		bls	.L188
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2253              		.loc 1 1360 5 is_stmt 1 view .LVU736
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2254              		.loc 1 1360 9 is_stmt 0 view .LVU737
 2255 000c 436A     		ldr	r3, [r0, #36]
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2256              		.loc 1 1360 21 view .LVU738
 2257 000e 43F48023 		orr	r3, r3, #262144
 2258 0012 4362     		str	r3, [r0, #36]
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2259              		.loc 1 1362 5 is_stmt 1 view .LVU739
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2260              		.loc 1 1362 12 is_stmt 0 view .LVU740
 2261 0014 0120     		movs	r0, #1
 2262              	.LVL127:
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2263              		.loc 1 1364 1 view .LVU741
 2264 0016 7047     		bx	lr
 2265              	.LVL128:
 2266              	.L188:
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2267              		.loc 1 1334 5 is_stmt 1 view .LVU742
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2268              		.loc 1 1334 8 is_stmt 0 view .LVU743
 2269 0018 11F0010F 		tst	r1, #1
 2270 001c 04D0     		beq	.L184
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2271              		.loc 1 1337 7 is_stmt 1 view .LVU744
 2272 001e 0268     		ldr	r2, [r0]
 2273 0020 9368     		ldr	r3, [r2, #8]
 2274 0022 43F08003 		orr	r3, r3, #128
 2275 0026 9360     		str	r3, [r2, #8]
 2276              	.L184:
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 93


 2277              		.loc 1 1341 5 view .LVU745
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2278              		.loc 1 1341 8 is_stmt 0 view .LVU746
 2279 0028 11F0020F 		tst	r1, #2
 2280 002c 04D0     		beq	.L185
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2281              		.loc 1 1344 7 is_stmt 1 view .LVU747
 2282 002e 0268     		ldr	r2, [r0]
 2283 0030 9368     		ldr	r3, [r2, #8]
 2284 0032 43F40043 		orr	r3, r3, #32768
 2285 0036 9360     		str	r3, [r2, #8]
 2286              	.L185:
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2287              		.loc 1 1348 5 view .LVU748
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2288              		.loc 1 1348 8 is_stmt 0 view .LVU749
 2289 0038 11F0040F 		tst	r1, #4
 2290 003c 04D0     		beq	.L186
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2291              		.loc 1 1351 7 is_stmt 1 view .LVU750
 2292 003e 0268     		ldr	r2, [r0]
 2293 0040 9368     		ldr	r3, [r2, #8]
 2294 0042 43F40003 		orr	r3, r3, #8388608
 2295 0046 9360     		str	r3, [r2, #8]
 2296              	.L186:
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2297              		.loc 1 1355 5 view .LVU751
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2298              		.loc 1 1355 12 is_stmt 0 view .LVU752
 2299 0048 0020     		movs	r0, #0
 2300              	.LVL129:
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2301              		.loc 1 1355 12 view .LVU753
 2302 004a 7047     		bx	lr
 2303              		.cfi_endproc
 2304              	.LFE78:
 2306              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 2307              		.align	1
 2308              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 2309              		.syntax unified
 2310              		.thumb
 2311              		.thumb_func
 2313              	HAL_CAN_GetTxMailboxesFreeLevel:
 2314              	.LVL130:
 2315              	.LFB79:
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t freelevel = 0U;
 2316              		.loc 1 1373 1 is_stmt 1 view -0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              		@ link register save eliminated.
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2321              		.loc 1 1374 3 view .LVU755
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2322              		.loc 1 1375 3 view .LVU756
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2323              		.loc 1 1375 24 is_stmt 0 view .LVU757
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 94


 2324 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2325              	.LVL131:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2326              		.loc 1 1377 3 is_stmt 1 view .LVU758
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2327              		.loc 1 1377 38 is_stmt 0 view .LVU759
 2328 0004 013B     		subs	r3, r3, #1
 2329              	.LVL132:
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2330              		.loc 1 1377 38 view .LVU760
 2331 0006 DBB2     		uxtb	r3, r3
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2332              		.loc 1 1377 6 view .LVU761
 2333 0008 012B     		cmp	r3, #1
 2334 000a 01D9     		bls	.L195
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2335              		.loc 1 1374 12 view .LVU762
 2336 000c 0020     		movs	r0, #0
 2337              	.LVL133:
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2338              		.loc 1 1400 3 is_stmt 1 view .LVU763
 2339              	.L189:
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2340              		.loc 1 1401 1 is_stmt 0 view .LVU764
 2341 000e 7047     		bx	lr
 2342              	.LVL134:
 2343              	.L195:
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2344              		.loc 1 1381 5 is_stmt 1 view .LVU765
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2345              		.loc 1 1381 14 is_stmt 0 view .LVU766
 2346 0010 0368     		ldr	r3, [r0]
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2347              		.loc 1 1381 24 view .LVU767
 2348 0012 9868     		ldr	r0, [r3, #8]
 2349              	.LVL135:
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2350              		.loc 1 1381 8 view .LVU768
 2351 0014 10F08060 		ands	r0, r0, #67108864
 2352 0018 00D0     		beq	.L191
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2353              		.loc 1 1383 16 view .LVU769
 2354 001a 0120     		movs	r0, #1
 2355              	.L191:
 2356              	.LVL136:
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2357              		.loc 1 1387 5 is_stmt 1 view .LVU770
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2358              		.loc 1 1387 24 is_stmt 0 view .LVU771
 2359 001c 9A68     		ldr	r2, [r3, #8]
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2360              		.loc 1 1387 8 view .LVU772
 2361 001e 12F0006F 		tst	r2, #134217728
 2362 0022 00D0     		beq	.L192
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2363              		.loc 1 1389 7 is_stmt 1 view .LVU773
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 95


 2364              		.loc 1 1389 16 is_stmt 0 view .LVU774
 2365 0024 0130     		adds	r0, r0, #1
 2366              	.LVL137:
 2367              	.L192:
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2368              		.loc 1 1393 5 is_stmt 1 view .LVU775
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2369              		.loc 1 1393 24 is_stmt 0 view .LVU776
 2370 0026 9B68     		ldr	r3, [r3, #8]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2371              		.loc 1 1393 8 view .LVU777
 2372 0028 13F0805F 		tst	r3, #268435456
 2373 002c EFD0     		beq	.L189
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2374              		.loc 1 1395 7 is_stmt 1 view .LVU778
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2375              		.loc 1 1395 16 is_stmt 0 view .LVU779
 2376 002e 0130     		adds	r0, r0, #1
 2377              	.LVL138:
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2378              		.loc 1 1395 16 view .LVU780
 2379 0030 7047     		bx	lr
 2380              		.cfi_endproc
 2381              	.LFE79:
 2383              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 2384              		.align	1
 2385              		.global	HAL_CAN_IsTxMessagePending
 2386              		.syntax unified
 2387              		.thumb
 2388              		.thumb_func
 2390              	HAL_CAN_IsTxMessagePending:
 2391              	.LVL139:
 2392              	.LFB80:
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
 2393              		.loc 1 1416 1 is_stmt 1 view -0
 2394              		.cfi_startproc
 2395              		@ args = 0, pretend = 0, frame = 0
 2396              		@ frame_needed = 0, uses_anonymous_args = 0
 2397              		@ link register save eliminated.
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2398              		.loc 1 1417 3 view .LVU782
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2399              		.loc 1 1418 3 view .LVU783
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2400              		.loc 1 1418 24 is_stmt 0 view .LVU784
 2401 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2402              	.LVL140:
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2403              		.loc 1 1421 3 is_stmt 1 view .LVU785
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2404              		.loc 1 1423 3 view .LVU786
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2405              		.loc 1 1423 38 is_stmt 0 view .LVU787
 2406 0004 013B     		subs	r3, r3, #1
 2407              	.LVL141:
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2408              		.loc 1 1423 38 view .LVU788
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 96


 2409 0006 DBB2     		uxtb	r3, r3
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2410              		.loc 1 1423 6 view .LVU789
 2411 0008 012B     		cmp	r3, #1
 2412 000a 01D9     		bls	.L200
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2413              		.loc 1 1417 12 view .LVU790
 2414 000c 0020     		movs	r0, #0
 2415              	.LVL142:
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2416              		.loc 1 1417 12 view .LVU791
 2417 000e 7047     		bx	lr
 2418              	.LVL143:
 2419              	.L200:
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2420              		.loc 1 1427 5 is_stmt 1 view .LVU792
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2421              		.loc 1 1427 14 is_stmt 0 view .LVU793
 2422 0010 0368     		ldr	r3, [r0]
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2423              		.loc 1 1427 24 view .LVU794
 2424 0012 9B68     		ldr	r3, [r3, #8]
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2425              		.loc 1 1427 30 view .LVU795
 2426 0014 03EA8163 		and	r3, r3, r1, lsl #26
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2427              		.loc 1 1427 8 view .LVU796
 2428 0018 B3EB816F 		cmp	r3, r1, lsl #26
 2429 001c 01D0     		beq	.L201
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2430              		.loc 1 1429 14 view .LVU797
 2431 001e 0120     		movs	r0, #1
 2432              	.LVL144:
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2433              		.loc 1 1434 3 is_stmt 1 view .LVU798
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2434              		.loc 1 1435 1 is_stmt 0 view .LVU799
 2435 0020 7047     		bx	lr
 2436              	.LVL145:
 2437              	.L201:
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2438              		.loc 1 1417 12 view .LVU800
 2439 0022 0020     		movs	r0, #0
 2440              	.LVL146:
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2441              		.loc 1 1417 12 view .LVU801
 2442 0024 7047     		bx	lr
 2443              		.cfi_endproc
 2444              	.LFE80:
 2446              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 2447              		.align	1
 2448              		.global	HAL_CAN_GetTxTimestamp
 2449              		.syntax unified
 2450              		.thumb
 2451              		.thumb_func
 2453              	HAL_CAN_GetTxTimestamp:
 2454              	.LVL147:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 97


 2455              	.LFB81:
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timestamp = 0U;
 2456              		.loc 1 1448 1 is_stmt 1 view -0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 0
 2459              		@ frame_needed = 0, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2461              		.loc 1 1449 3 view .LVU803
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2462              		.loc 1 1450 3 view .LVU804
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2463              		.loc 1 1451 3 view .LVU805
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2464              		.loc 1 1451 24 is_stmt 0 view .LVU806
 2465 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2466              	.LVL148:
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2467              		.loc 1 1454 3 is_stmt 1 view .LVU807
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2468              		.loc 1 1456 3 view .LVU808
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2469              		.loc 1 1456 38 is_stmt 0 view .LVU809
 2470 0004 013B     		subs	r3, r3, #1
 2471              	.LVL149:
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2472              		.loc 1 1456 38 view .LVU810
 2473 0006 DBB2     		uxtb	r3, r3
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2474              		.loc 1 1456 6 view .LVU811
 2475 0008 012B     		cmp	r3, #1
 2476 000a 01D9     		bls	.L205
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2477              		.loc 1 1449 12 view .LVU812
 2478 000c 0020     		movs	r0, #0
 2479              	.LVL150:
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2480              		.loc 1 1467 3 is_stmt 1 view .LVU813
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2481              		.loc 1 1468 1 is_stmt 0 view .LVU814
 2482 000e 7047     		bx	lr
 2483              	.LVL151:
 2484              	.L205:
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2485              		.loc 1 1460 5 is_stmt 1 view .LVU815
 2486              	.LBB4:
 2487              	.LBI4:
 2488              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 98


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 99


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 100


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 101


 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 102


 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 103


 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 104


 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 105


 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 106


 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 107


 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 108


 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 109


 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 110


 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 111


 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 112


 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 113


 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 114


 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 115


 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2489              		.loc 2 981 31 view .LVU816
 2490              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2491              		.loc 2 983 3 view .LVU817
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2492              		.loc 2 988 4 view .LVU818
 2493              		.syntax unified
 2494              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2495 0010 91FAA1F1 		rbit r1, r1
 2496              	@ 0 "" 2
 2497              	.LVL152:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2498              		.loc 2 1001 3 view .LVU819
 2499              		.loc 2 1001 3 is_stmt 0 view .LVU820
 2500              		.thumb
 2501              		.syntax unified
 2502              	.LBE5:
 2503              	.LBE4:
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2504              		.loc 1 1460 21 view .LVU821
 2505 0014 B1FA81F1 		clz	r1, r1
 2506              	.LVL153:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2507              		.loc 1 1463 5 is_stmt 1 view .LVU822
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2508              		.loc 1 1463 22 is_stmt 0 view .LVU823
 2509 0018 0368     		ldr	r3, [r0]
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2510              		.loc 1 1463 61 view .LVU824
 2511 001a 1831     		adds	r1, r1, #24
 2512              	.LVL154:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2513              		.loc 1 1463 61 view .LVU825
 2514 001c 03EB0113 		add	r3, r3, r1, lsl #4
 2515 0020 5868     		ldr	r0, [r3, #4]
 2516              	.LVL155:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 116


 2517              		.loc 1 1463 85 view .LVU826
 2518 0022 000C     		lsrs	r0, r0, #16
 2519              	.LVL156:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2520              		.loc 1 1463 85 view .LVU827
 2521 0024 7047     		bx	lr
 2522              		.cfi_endproc
 2523              	.LFE81:
 2525              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 2526              		.align	1
 2527              		.global	HAL_CAN_GetRxMessage
 2528              		.syntax unified
 2529              		.thumb
 2530              		.thumb_func
 2532              	HAL_CAN_GetRxMessage:
 2533              	.LVL157:
 2534              	.LFB82:
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2535              		.loc 1 1483 1 is_stmt 1 view -0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 0
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539              		@ link register save eliminated.
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2540              		.loc 1 1484 3 view .LVU829
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2541              		.loc 1 1484 24 is_stmt 0 view .LVU830
 2542 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 2543              	.LVL158:
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2544              		.loc 1 1486 3 is_stmt 1 view .LVU831
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2545              		.loc 1 1488 3 view .LVU832
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2546              		.loc 1 1488 38 is_stmt 0 view .LVU833
 2547 0004 0CF1FF3C 		add	ip, ip, #-1
 2548              	.LVL159:
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2549              		.loc 1 1488 38 view .LVU834
 2550 0008 5FFA8CFC 		uxtb	ip, ip
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2551              		.loc 1 1488 6 view .LVU835
 2552 000c BCF1010F 		cmp	ip, #1
 2553 0010 00F2A580 		bhi	.L207
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2554              		.loc 1 1483 1 view .LVU836
 2555 0014 30B4     		push	{r4, r5}
 2556              	.LCFI14:
 2557              		.cfi_def_cfa_offset 8
 2558              		.cfi_offset 4, -8
 2559              		.cfi_offset 5, -4
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2560              		.loc 1 1492 5 is_stmt 1 view .LVU837
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2561              		.loc 1 1492 8 is_stmt 0 view .LVU838
 2562 0016 51B9     		cbnz	r1, .L208
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 117


 2563              		.loc 1 1495 7 is_stmt 1 view .LVU839
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2564              		.loc 1 1495 16 is_stmt 0 view .LVU840
 2565 0018 0468     		ldr	r4, [r0]
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2566              		.loc 1 1495 26 view .LVU841
 2567 001a E468     		ldr	r4, [r4, #12]
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2568              		.loc 1 1495 10 view .LVU842
 2569 001c 14F0030F 		tst	r4, #3
 2570 0020 10D1     		bne	.L209
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2571              		.loc 1 1498 9 is_stmt 1 view .LVU843
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2572              		.loc 1 1498 13 is_stmt 0 view .LVU844
 2573 0022 436A     		ldr	r3, [r0, #36]
 2574              	.LVL160:
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2575              		.loc 1 1498 25 view .LVU845
 2576 0024 43F40013 		orr	r3, r3, #2097152
 2577 0028 4362     		str	r3, [r0, #36]
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2578              		.loc 1 1500 9 is_stmt 1 view .LVU846
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2579              		.loc 1 1500 16 is_stmt 0 view .LVU847
 2580 002a 0120     		movs	r0, #1
 2581              	.LVL161:
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2582              		.loc 1 1500 16 view .LVU848
 2583 002c 7EE0     		b	.L210
 2584              	.LVL162:
 2585              	.L208:
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2586              		.loc 1 1506 7 is_stmt 1 view .LVU849
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2587              		.loc 1 1506 16 is_stmt 0 view .LVU850
 2588 002e 0468     		ldr	r4, [r0]
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2589              		.loc 1 1506 26 view .LVU851
 2590 0030 2469     		ldr	r4, [r4, #16]
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2591              		.loc 1 1506 10 view .LVU852
 2592 0032 14F0030F 		tst	r4, #3
 2593 0036 05D1     		bne	.L209
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2594              		.loc 1 1509 9 is_stmt 1 view .LVU853
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2595              		.loc 1 1509 13 is_stmt 0 view .LVU854
 2596 0038 436A     		ldr	r3, [r0, #36]
 2597              	.LVL163:
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2598              		.loc 1 1509 25 view .LVU855
 2599 003a 43F40013 		orr	r3, r3, #2097152
 2600 003e 4362     		str	r3, [r0, #36]
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2601              		.loc 1 1511 9 is_stmt 1 view .LVU856
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 118


 2602              		.loc 1 1511 16 is_stmt 0 view .LVU857
 2603 0040 0120     		movs	r0, #1
 2604              	.LVL164:
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2605              		.loc 1 1511 16 view .LVU858
 2606 0042 73E0     		b	.L210
 2607              	.LVL165:
 2608              	.L209:
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2609              		.loc 1 1516 5 is_stmt 1 view .LVU859
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2610              		.loc 1 1516 39 is_stmt 0 view .LVU860
 2611 0044 0568     		ldr	r5, [r0]
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2612              		.loc 1 1516 71 view .LVU861
 2613 0046 01F11B04 		add	r4, r1, #27
 2614 004a 2401     		lsls	r4, r4, #4
 2615 004c 2C59     		ldr	r4, [r5, r4]
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2616              		.loc 1 1516 33 view .LVU862
 2617 004e 04F00404 		and	r4, r4, #4
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2618              		.loc 1 1516 18 view .LVU863
 2619 0052 9460     		str	r4, [r2, #8]
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2620              		.loc 1 1517 5 is_stmt 1 view .LVU864
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2621              		.loc 1 1517 8 is_stmt 0 view .LVU865
 2622 0054 002C     		cmp	r4, #0
 2623 0056 6BD1     		bne	.L211
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2624              		.loc 1 1519 7 is_stmt 1 view .LVU866
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2625              		.loc 1 1519 45 is_stmt 0 view .LVU867
 2626 0058 0568     		ldr	r5, [r0]
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2627              		.loc 1 1519 77 view .LVU868
 2628 005a 01F11B04 		add	r4, r1, #27
 2629 005e 2401     		lsls	r4, r4, #4
 2630 0060 2C59     		ldr	r4, [r5, r4]
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2631              		.loc 1 1519 83 view .LVU869
 2632 0062 640D     		lsrs	r4, r4, #21
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2633              		.loc 1 1519 22 view .LVU870
 2634 0064 1460     		str	r4, [r2]
 2635              	.L212:
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2636              		.loc 1 1526 5 is_stmt 1 view .LVU871
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2637              		.loc 1 1526 40 is_stmt 0 view .LVU872
 2638 0066 0468     		ldr	r4, [r0]
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2639              		.loc 1 1526 72 view .LVU873
 2640 0068 01F11B0C 		add	ip, r1, #27
 2641 006c 4FEA0C1C 		lsl	ip, ip, #4
 2642 0070 54F80C40 		ldr	r4, [r4, ip]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 119


1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2643              		.loc 1 1526 34 view .LVU874
 2644 0074 04F00204 		and	r4, r4, #2
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2645              		.loc 1 1526 18 view .LVU875
 2646 0078 D460     		str	r4, [r2, #12]
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2647              		.loc 1 1527 5 is_stmt 1 view .LVU876
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2648              		.loc 1 1527 31 is_stmt 0 view .LVU877
 2649 007a 0468     		ldr	r4, [r0]
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2650              		.loc 1 1527 63 view .LVU878
 2651 007c A444     		add	ip, ip, r4
 2652 007e DCF80450 		ldr	r5, [ip, #4]
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2653              		.loc 1 1527 8 view .LVU879
 2654 0082 15F0080F 		tst	r5, #8
 2655 0086 5BD0     		beq	.L213
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2656              		.loc 1 1530 7 is_stmt 1 view .LVU880
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2657              		.loc 1 1530 20 is_stmt 0 view .LVU881
 2658 0088 0824     		movs	r4, #8
 2659 008a 1461     		str	r4, [r2, #16]
 2660              	.L214:
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2661              		.loc 1 1536 5 is_stmt 1 view .LVU882
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2662              		.loc 1 1536 54 is_stmt 0 view .LVU883
 2663 008c 0468     		ldr	r4, [r0]
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2664              		.loc 1 1536 86 view .LVU884
 2665 008e 01F11B0C 		add	ip, r1, #27
 2666 0092 04EB0C14 		add	r4, r4, ip, lsl #4
 2667 0096 6468     		ldr	r4, [r4, #4]
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2668              		.loc 1 1536 93 view .LVU885
 2669 0098 C4F30724 		ubfx	r4, r4, #8, #8
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2670              		.loc 1 1536 31 view .LVU886
 2671 009c 9461     		str	r4, [r2, #24]
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2672              		.loc 1 1537 5 is_stmt 1 view .LVU887
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2673              		.loc 1 1537 48 is_stmt 0 view .LVU888
 2674 009e 0468     		ldr	r4, [r0]
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2675              		.loc 1 1537 80 view .LVU889
 2676 00a0 04EB0C14 		add	r4, r4, ip, lsl #4
 2677 00a4 6468     		ldr	r4, [r4, #4]
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2678              		.loc 1 1537 87 view .LVU890
 2679 00a6 240C     		lsrs	r4, r4, #16
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2680              		.loc 1 1537 24 view .LVU891
 2681 00a8 5461     		str	r4, [r2, #20]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 120


1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2682              		.loc 1 1540 5 is_stmt 1 view .LVU892
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2683              		.loc 1 1540 49 is_stmt 0 view .LVU893
 2684 00aa 0268     		ldr	r2, [r0]
 2685              	.LVL166:
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2686              		.loc 1 1540 81 view .LVU894
 2687 00ac 02EB0112 		add	r2, r2, r1, lsl #4
 2688 00b0 D2F8B821 		ldr	r2, [r2, #440]
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2689              		.loc 1 1540 14 view .LVU895
 2690 00b4 1A70     		strb	r2, [r3]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2691              		.loc 1 1541 5 is_stmt 1 view .LVU896
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2692              		.loc 1 1541 49 is_stmt 0 view .LVU897
 2693 00b6 0268     		ldr	r2, [r0]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2694              		.loc 1 1541 81 view .LVU898
 2695 00b8 02EB0112 		add	r2, r2, r1, lsl #4
 2696 00bc D2F8B821 		ldr	r2, [r2, #440]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2697              		.loc 1 1541 16 view .LVU899
 2698 00c0 C2F30722 		ubfx	r2, r2, #8, #8
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2699              		.loc 1 1541 14 view .LVU900
 2700 00c4 5A70     		strb	r2, [r3, #1]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2701              		.loc 1 1542 5 is_stmt 1 view .LVU901
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2702              		.loc 1 1542 49 is_stmt 0 view .LVU902
 2703 00c6 0268     		ldr	r2, [r0]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2704              		.loc 1 1542 81 view .LVU903
 2705 00c8 02EB0112 		add	r2, r2, r1, lsl #4
 2706 00cc D2F8B821 		ldr	r2, [r2, #440]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2707              		.loc 1 1542 16 view .LVU904
 2708 00d0 C2F30742 		ubfx	r2, r2, #16, #8
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2709              		.loc 1 1542 14 view .LVU905
 2710 00d4 9A70     		strb	r2, [r3, #2]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2711              		.loc 1 1543 5 is_stmt 1 view .LVU906
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2712              		.loc 1 1543 49 is_stmt 0 view .LVU907
 2713 00d6 0268     		ldr	r2, [r0]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2714              		.loc 1 1543 81 view .LVU908
 2715 00d8 02EB0112 		add	r2, r2, r1, lsl #4
 2716 00dc D2F8B821 		ldr	r2, [r2, #440]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2717              		.loc 1 1543 16 view .LVU909
 2718 00e0 120E     		lsrs	r2, r2, #24
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2719              		.loc 1 1543 14 view .LVU910
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 121


 2720 00e2 DA70     		strb	r2, [r3, #3]
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2721              		.loc 1 1544 5 is_stmt 1 view .LVU911
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2722              		.loc 1 1544 49 is_stmt 0 view .LVU912
 2723 00e4 0268     		ldr	r2, [r0]
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2724              		.loc 1 1544 81 view .LVU913
 2725 00e6 02EB0112 		add	r2, r2, r1, lsl #4
 2726 00ea D2F8BC21 		ldr	r2, [r2, #444]
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2727              		.loc 1 1544 14 view .LVU914
 2728 00ee 1A71     		strb	r2, [r3, #4]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2729              		.loc 1 1545 5 is_stmt 1 view .LVU915
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2730              		.loc 1 1545 49 is_stmt 0 view .LVU916
 2731 00f0 0268     		ldr	r2, [r0]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2732              		.loc 1 1545 81 view .LVU917
 2733 00f2 02EB0112 		add	r2, r2, r1, lsl #4
 2734 00f6 D2F8BC21 		ldr	r2, [r2, #444]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2735              		.loc 1 1545 16 view .LVU918
 2736 00fa C2F30722 		ubfx	r2, r2, #8, #8
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2737              		.loc 1 1545 14 view .LVU919
 2738 00fe 5A71     		strb	r2, [r3, #5]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2739              		.loc 1 1546 5 is_stmt 1 view .LVU920
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2740              		.loc 1 1546 49 is_stmt 0 view .LVU921
 2741 0100 0268     		ldr	r2, [r0]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2742              		.loc 1 1546 81 view .LVU922
 2743 0102 02EB0112 		add	r2, r2, r1, lsl #4
 2744 0106 D2F8BC21 		ldr	r2, [r2, #444]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2745              		.loc 1 1546 16 view .LVU923
 2746 010a C2F30742 		ubfx	r2, r2, #16, #8
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2747              		.loc 1 1546 14 view .LVU924
 2748 010e 9A71     		strb	r2, [r3, #6]
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2749              		.loc 1 1547 5 is_stmt 1 view .LVU925
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2750              		.loc 1 1547 49 is_stmt 0 view .LVU926
 2751 0110 0268     		ldr	r2, [r0]
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2752              		.loc 1 1547 81 view .LVU927
 2753 0112 02EB0112 		add	r2, r2, r1, lsl #4
 2754 0116 D2F8BC21 		ldr	r2, [r2, #444]
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2755              		.loc 1 1547 16 view .LVU928
 2756 011a 120E     		lsrs	r2, r2, #24
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2757              		.loc 1 1547 14 view .LVU929
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 122


 2758 011c DA71     		strb	r2, [r3, #7]
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2759              		.loc 1 1550 5 is_stmt 1 view .LVU930
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2760              		.loc 1 1550 8 is_stmt 0 view .LVU931
 2761 011e C1B9     		cbnz	r1, .L215
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2762              		.loc 1 1553 7 is_stmt 1 view .LVU932
 2763 0120 0268     		ldr	r2, [r0]
 2764 0122 D368     		ldr	r3, [r2, #12]
 2765              	.LVL167:
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2766              		.loc 1 1553 7 is_stmt 0 view .LVU933
 2767 0124 43F02003 		orr	r3, r3, #32
 2768 0128 D360     		str	r3, [r2, #12]
 2769              	.L216:
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2770              		.loc 1 1562 5 is_stmt 1 view .LVU934
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2771              		.loc 1 1562 12 is_stmt 0 view .LVU935
 2772 012a 0020     		movs	r0, #0
 2773              	.LVL168:
 2774              	.L210:
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2775              		.loc 1 1571 1 view .LVU936
 2776 012c 30BC     		pop	{r4, r5}
 2777              	.LCFI15:
 2778              		.cfi_remember_state
 2779              		.cfi_restore 5
 2780              		.cfi_restore 4
 2781              		.cfi_def_cfa_offset 0
 2782 012e 7047     		bx	lr
 2783              	.LVL169:
 2784              	.L211:
 2785              	.LCFI16:
 2786              		.cfi_restore_state
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2787              		.loc 1 1523 7 is_stmt 1 view .LVU937
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2788              		.loc 1 1524 29 is_stmt 0 view .LVU938
 2789 0130 0568     		ldr	r5, [r0]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2790              		.loc 1 1524 61 view .LVU939
 2791 0132 01F11B04 		add	r4, r1, #27
 2792 0136 2401     		lsls	r4, r4, #4
 2793 0138 2C59     		ldr	r4, [r5, r4]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2794              		.loc 1 1524 67 view .LVU940
 2795 013a E408     		lsrs	r4, r4, #3
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2796              		.loc 1 1523 22 view .LVU941
 2797 013c 5460     		str	r4, [r2, #4]
 2798 013e 92E7     		b	.L212
 2799              	.L213:
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2800              		.loc 1 1534 7 is_stmt 1 view .LVU942
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 123


 2801              		.loc 1 1534 75 is_stmt 0 view .LVU943
 2802 0140 01F11B05 		add	r5, r1, #27
 2803 0144 04EB0514 		add	r4, r4, r5, lsl #4
 2804 0148 6468     		ldr	r4, [r4, #4]
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2805              		.loc 1 1534 82 view .LVU944
 2806 014a 04F00F04 		and	r4, r4, #15
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2807              		.loc 1 1534 20 view .LVU945
 2808 014e 1461     		str	r4, [r2, #16]
 2809 0150 9CE7     		b	.L214
 2810              	.LVL170:
 2811              	.L215:
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2812              		.loc 1 1558 7 is_stmt 1 view .LVU946
 2813 0152 0268     		ldr	r2, [r0]
 2814 0154 1369     		ldr	r3, [r2, #16]
 2815              	.LVL171:
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2816              		.loc 1 1558 7 is_stmt 0 view .LVU947
 2817 0156 43F02003 		orr	r3, r3, #32
 2818 015a 1361     		str	r3, [r2, #16]
 2819 015c E5E7     		b	.L216
 2820              	.LVL172:
 2821              	.L207:
 2822              	.LCFI17:
 2823              		.cfi_def_cfa_offset 0
 2824              		.cfi_restore 4
 2825              		.cfi_restore 5
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2826              		.loc 1 1567 5 is_stmt 1 view .LVU948
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2827              		.loc 1 1567 9 is_stmt 0 view .LVU949
 2828 015e 436A     		ldr	r3, [r0, #36]
 2829              	.LVL173:
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2830              		.loc 1 1567 21 view .LVU950
 2831 0160 43F48023 		orr	r3, r3, #262144
 2832 0164 4362     		str	r3, [r0, #36]
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2833              		.loc 1 1569 5 is_stmt 1 view .LVU951
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2834              		.loc 1 1569 12 is_stmt 0 view .LVU952
 2835 0166 0120     		movs	r0, #1
 2836              	.LVL174:
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2837              		.loc 1 1571 1 view .LVU953
 2838 0168 7047     		bx	lr
 2839              		.cfi_endproc
 2840              	.LFE82:
 2842              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 2843              		.align	1
 2844              		.global	HAL_CAN_GetRxFifoFillLevel
 2845              		.syntax unified
 2846              		.thumb
 2847              		.thumb_func
 2849              	HAL_CAN_GetRxFifoFillLevel:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 124


 2850              	.LVL175:
 2851              	.LFB83:
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filllevel = 0U;
 2852              		.loc 1 1582 1 is_stmt 1 view -0
 2853              		.cfi_startproc
 2854              		@ args = 0, pretend = 0, frame = 0
 2855              		@ frame_needed = 0, uses_anonymous_args = 0
 2856              		@ link register save eliminated.
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2857              		.loc 1 1583 3 view .LVU955
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2858              		.loc 1 1584 3 view .LVU956
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2859              		.loc 1 1584 24 is_stmt 0 view .LVU957
 2860 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2861              	.LVL176:
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2862              		.loc 1 1587 3 is_stmt 1 view .LVU958
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2863              		.loc 1 1589 3 view .LVU959
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2864              		.loc 1 1589 38 is_stmt 0 view .LVU960
 2865 0004 013B     		subs	r3, r3, #1
 2866              	.LVL177:
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2867              		.loc 1 1589 38 view .LVU961
 2868 0006 DBB2     		uxtb	r3, r3
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2869              		.loc 1 1589 6 view .LVU962
 2870 0008 012B     		cmp	r3, #1
 2871 000a 01D9     		bls	.L225
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2872              		.loc 1 1583 12 view .LVU963
 2873 000c 0020     		movs	r0, #0
 2874              	.LVL178:
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2875              		.loc 1 1603 3 is_stmt 1 view .LVU964
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2876              		.loc 1 1604 1 is_stmt 0 view .LVU965
 2877 000e 7047     		bx	lr
 2878              	.LVL179:
 2879              	.L225:
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2880              		.loc 1 1592 5 is_stmt 1 view .LVU966
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2881              		.loc 1 1592 8 is_stmt 0 view .LVU967
 2882 0010 21B9     		cbnz	r1, .L223
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2883              		.loc 1 1594 7 is_stmt 1 view .LVU968
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2884              		.loc 1 1594 23 is_stmt 0 view .LVU969
 2885 0012 0368     		ldr	r3, [r0]
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2886              		.loc 1 1594 33 view .LVU970
 2887 0014 D868     		ldr	r0, [r3, #12]
 2888              	.LVL180:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 125


 2889              		.loc 1 1594 17 view .LVU971
 2890 0016 00F00300 		and	r0, r0, #3
 2891              	.LVL181:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2892              		.loc 1 1594 17 view .LVU972
 2893 001a 7047     		bx	lr
 2894              	.LVL182:
 2895              	.L223:
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2896              		.loc 1 1598 7 is_stmt 1 view .LVU973
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2897              		.loc 1 1598 23 is_stmt 0 view .LVU974
 2898 001c 0368     		ldr	r3, [r0]
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2899              		.loc 1 1598 33 view .LVU975
 2900 001e 1869     		ldr	r0, [r3, #16]
 2901              	.LVL183:
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2902              		.loc 1 1598 17 view .LVU976
 2903 0020 00F00300 		and	r0, r0, #3
 2904              	.LVL184:
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2905              		.loc 1 1598 17 view .LVU977
 2906 0024 7047     		bx	lr
 2907              		.cfi_endproc
 2908              	.LFE83:
 2910              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2911              		.align	1
 2912              		.global	HAL_CAN_ActivateNotification
 2913              		.syntax unified
 2914              		.thumb
 2915              		.thumb_func
 2917              	HAL_CAN_ActivateNotification:
 2918              	.LVL185:
 2919              	.LFB84:
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2920              		.loc 1 1635 1 is_stmt 1 view -0
 2921              		.cfi_startproc
 2922              		@ args = 0, pretend = 0, frame = 0
 2923              		@ frame_needed = 0, uses_anonymous_args = 0
 2924              		@ link register save eliminated.
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2925              		.loc 1 1636 3 view .LVU979
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2926              		.loc 1 1636 24 is_stmt 0 view .LVU980
 2927 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2928              	.LVL186:
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2929              		.loc 1 1639 3 is_stmt 1 view .LVU981
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2930              		.loc 1 1641 3 view .LVU982
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2931              		.loc 1 1641 38 is_stmt 0 view .LVU983
 2932 0004 013B     		subs	r3, r3, #1
 2933              	.LVL187:
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2934              		.loc 1 1641 38 view .LVU984
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 126


 2935 0006 DBB2     		uxtb	r3, r3
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2936              		.loc 1 1641 6 view .LVU985
 2937 0008 012B     		cmp	r3, #1
 2938 000a 05D9     		bls	.L229
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2939              		.loc 1 1653 5 is_stmt 1 view .LVU986
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2940              		.loc 1 1653 9 is_stmt 0 view .LVU987
 2941 000c 436A     		ldr	r3, [r0, #36]
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2942              		.loc 1 1653 21 view .LVU988
 2943 000e 43F48023 		orr	r3, r3, #262144
 2944 0012 4362     		str	r3, [r0, #36]
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2945              		.loc 1 1655 5 is_stmt 1 view .LVU989
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2946              		.loc 1 1655 12 is_stmt 0 view .LVU990
 2947 0014 0120     		movs	r0, #1
 2948              	.LVL188:
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2949              		.loc 1 1657 1 view .LVU991
 2950 0016 7047     		bx	lr
 2951              	.LVL189:
 2952              	.L229:
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2953              		.loc 1 1645 5 is_stmt 1 view .LVU992
 2954 0018 0268     		ldr	r2, [r0]
 2955 001a 5369     		ldr	r3, [r2, #20]
 2956 001c 0B43     		orrs	r3, r3, r1
 2957 001e 5361     		str	r3, [r2, #20]
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2958              		.loc 1 1648 5 view .LVU993
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2959              		.loc 1 1648 12 is_stmt 0 view .LVU994
 2960 0020 0020     		movs	r0, #0
 2961              	.LVL190:
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2962              		.loc 1 1648 12 view .LVU995
 2963 0022 7047     		bx	lr
 2964              		.cfi_endproc
 2965              	.LFE84:
 2967              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2968              		.align	1
 2969              		.global	HAL_CAN_DeactivateNotification
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2974              	HAL_CAN_DeactivateNotification:
 2975              	.LVL191:
 2976              	.LFB85:
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2977              		.loc 1 1668 1 is_stmt 1 view -0
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 0
 2980              		@ frame_needed = 0, uses_anonymous_args = 0
 2981              		@ link register save eliminated.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 127


1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2982              		.loc 1 1669 3 view .LVU997
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2983              		.loc 1 1669 24 is_stmt 0 view .LVU998
 2984 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2985              	.LVL192:
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2986              		.loc 1 1672 3 is_stmt 1 view .LVU999
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2987              		.loc 1 1674 3 view .LVU1000
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2988              		.loc 1 1674 38 is_stmt 0 view .LVU1001
 2989 0004 013B     		subs	r3, r3, #1
 2990              	.LVL193:
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2991              		.loc 1 1674 38 view .LVU1002
 2992 0006 DBB2     		uxtb	r3, r3
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2993              		.loc 1 1674 6 view .LVU1003
 2994 0008 012B     		cmp	r3, #1
 2995 000a 05D9     		bls	.L233
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2996              		.loc 1 1686 5 is_stmt 1 view .LVU1004
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2997              		.loc 1 1686 9 is_stmt 0 view .LVU1005
 2998 000c 436A     		ldr	r3, [r0, #36]
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2999              		.loc 1 1686 21 view .LVU1006
 3000 000e 43F48023 		orr	r3, r3, #262144
 3001 0012 4362     		str	r3, [r0, #36]
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3002              		.loc 1 1688 5 is_stmt 1 view .LVU1007
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3003              		.loc 1 1688 12 is_stmt 0 view .LVU1008
 3004 0014 0120     		movs	r0, #1
 3005              	.LVL194:
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3006              		.loc 1 1690 1 view .LVU1009
 3007 0016 7047     		bx	lr
 3008              	.LVL195:
 3009              	.L233:
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3010              		.loc 1 1678 5 is_stmt 1 view .LVU1010
 3011 0018 0268     		ldr	r2, [r0]
 3012 001a 5369     		ldr	r3, [r2, #20]
 3013 001c 23EA0103 		bic	r3, r3, r1
 3014 0020 5361     		str	r3, [r2, #20]
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3015              		.loc 1 1681 5 view .LVU1011
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3016              		.loc 1 1681 12 is_stmt 0 view .LVU1012
 3017 0022 0020     		movs	r0, #0
 3018              	.LVL196:
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3019              		.loc 1 1681 12 view .LVU1013
 3020 0024 7047     		bx	lr
 3021              		.cfi_endproc
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 128


 3022              	.LFE85:
 3024              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 3025              		.align	1
 3026              		.global	HAL_CAN_IRQHandler
 3027              		.syntax unified
 3028              		.thumb
 3029              		.thumb_func
 3031              	HAL_CAN_IRQHandler:
 3032              	.LVL197:
 3033              	.LFB86:
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 3034              		.loc 1 1699 1 is_stmt 1 view -0
 3035              		.cfi_startproc
 3036              		@ args = 0, pretend = 0, frame = 0
 3037              		@ frame_needed = 0, uses_anonymous_args = 0
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 3038              		.loc 1 1699 1 is_stmt 0 view .LVU1015
 3039 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3040              	.LCFI18:
 3041              		.cfi_def_cfa_offset 40
 3042              		.cfi_offset 3, -40
 3043              		.cfi_offset 4, -36
 3044              		.cfi_offset 5, -32
 3045              		.cfi_offset 6, -28
 3046              		.cfi_offset 7, -24
 3047              		.cfi_offset 8, -20
 3048              		.cfi_offset 9, -16
 3049              		.cfi_offset 10, -12
 3050              		.cfi_offset 11, -8
 3051              		.cfi_offset 14, -4
 3052 0004 0446     		mov	r4, r0
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 3053              		.loc 1 1700 3 is_stmt 1 view .LVU1016
 3054              	.LVL198:
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 3055              		.loc 1 1701 3 view .LVU1017
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 3056              		.loc 1 1701 25 is_stmt 0 view .LVU1018
 3057 0006 0368     		ldr	r3, [r0]
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 3058              		.loc 1 1701 12 view .LVU1019
 3059 0008 5D69     		ldr	r5, [r3, #20]
 3060              	.LVL199:
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 3061              		.loc 1 1702 3 is_stmt 1 view .LVU1020
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 3062              		.loc 1 1702 12 is_stmt 0 view .LVU1021
 3063 000a D3F80480 		ldr	r8, [r3, #4]
 3064              	.LVL200:
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 3065              		.loc 1 1703 3 is_stmt 1 view .LVU1022
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 3066              		.loc 1 1703 12 is_stmt 0 view .LVU1023
 3067 000e 9F68     		ldr	r7, [r3, #8]
 3068              	.LVL201:
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 3069              		.loc 1 1704 3 is_stmt 1 view .LVU1024
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 129


1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 3070              		.loc 1 1704 12 is_stmt 0 view .LVU1025
 3071 0010 D3F80CB0 		ldr	fp, [r3, #12]
 3072              	.LVL202:
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 3073              		.loc 1 1705 3 is_stmt 1 view .LVU1026
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 3074              		.loc 1 1705 12 is_stmt 0 view .LVU1027
 3075 0014 D3F810A0 		ldr	r10, [r3, #16]
 3076              	.LVL203:
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3077              		.loc 1 1706 3 is_stmt 1 view .LVU1028
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3078              		.loc 1 1706 12 is_stmt 0 view .LVU1029
 3079 0018 D3F81890 		ldr	r9, [r3, #24]
 3080              	.LVL204:
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3081              		.loc 1 1709 3 is_stmt 1 view .LVU1030
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3082              		.loc 1 1709 6 is_stmt 0 view .LVU1031
 3083 001c 15F00106 		ands	r6, r5, #1
 3084 0020 27D0     		beq	.L235
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3085              		.loc 1 1712 5 is_stmt 1 view .LVU1032
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3086              		.loc 1 1712 8 is_stmt 0 view .LVU1033
 3087 0022 17F00106 		ands	r6, r7, #1
 3088 0026 08D0     		beq	.L236
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3089              		.loc 1 1715 7 is_stmt 1 view .LVU1034
 3090 0028 0122     		movs	r2, #1
 3091 002a 9A60     		str	r2, [r3, #8]
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3092              		.loc 1 1717 7 view .LVU1035
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3093              		.loc 1 1717 10 is_stmt 0 view .LVU1036
 3094 002c 17F0020F 		tst	r7, #2
 3095 0030 00F0AC80 		beq	.L237
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3096              		.loc 1 1722 9 is_stmt 1 view .LVU1037
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3097              		.loc 1 1722 13 is_stmt 0 view .LVU1038
 3098 0034 836A     		ldr	r3, [r0, #40]
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3099              		.loc 1 1722 9 view .LVU1039
 3100 0036 9847     		blx	r3
 3101              	.LVL205:
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 3102              		.loc 1 1700 12 view .LVU1040
 3103 0038 0026     		movs	r6, #0
 3104              	.L236:
 3105              	.LVL206:
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3106              		.loc 1 1755 5 is_stmt 1 view .LVU1041
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3107              		.loc 1 1755 8 is_stmt 0 view .LVU1042
 3108 003a 17F4807F 		tst	r7, #256
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 130


 3109 003e 0AD0     		beq	.L238
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3110              		.loc 1 1758 7 is_stmt 1 view .LVU1043
 3111 0040 2368     		ldr	r3, [r4]
 3112 0042 4FF48072 		mov	r2, #256
 3113 0046 9A60     		str	r2, [r3, #8]
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3114              		.loc 1 1760 7 view .LVU1044
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3115              		.loc 1 1760 10 is_stmt 0 view .LVU1045
 3116 0048 17F4007F 		tst	r7, #512
 3117 004c 00F0AD80 		beq	.L239
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3118              		.loc 1 1765 9 is_stmt 1 view .LVU1046
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3119              		.loc 1 1765 13 is_stmt 0 view .LVU1047
 3120 0050 E36A     		ldr	r3, [r4, #44]
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3121              		.loc 1 1765 9 view .LVU1048
 3122 0052 2046     		mov	r0, r4
 3123 0054 9847     		blx	r3
 3124              	.LVL207:
 3125              	.L238:
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3126              		.loc 1 1798 5 is_stmt 1 view .LVU1049
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3127              		.loc 1 1798 8 is_stmt 0 view .LVU1050
 3128 0056 17F4803F 		tst	r7, #65536
 3129 005a 0AD0     		beq	.L235
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3130              		.loc 1 1801 7 is_stmt 1 view .LVU1051
 3131 005c 2368     		ldr	r3, [r4]
 3132 005e 4FF48032 		mov	r2, #65536
 3133 0062 9A60     		str	r2, [r3, #8]
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3134              		.loc 1 1803 7 view .LVU1052
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3135              		.loc 1 1803 10 is_stmt 0 view .LVU1053
 3136 0064 17F4003F 		tst	r7, #131072
 3137 0068 00F0AF80 		beq	.L242
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3138              		.loc 1 1808 9 is_stmt 1 view .LVU1054
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3139              		.loc 1 1808 13 is_stmt 0 view .LVU1055
 3140 006c 236B     		ldr	r3, [r4, #48]
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3141              		.loc 1 1808 9 view .LVU1056
 3142 006e 2046     		mov	r0, r4
 3143 0070 9847     		blx	r3
 3144              	.LVL208:
 3145              	.L235:
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3146              		.loc 1 1842 3 is_stmt 1 view .LVU1057
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3147              		.loc 1 1842 6 is_stmt 0 view .LVU1058
 3148 0072 15F0080F 		tst	r5, #8
 3149 0076 07D0     		beq	.L245
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 131


1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3150              		.loc 1 1844 5 is_stmt 1 view .LVU1059
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3151              		.loc 1 1844 8 is_stmt 0 view .LVU1060
 3152 0078 1BF0100F 		tst	fp, #16
 3153 007c 04D0     		beq	.L245
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3154              		.loc 1 1847 7 is_stmt 1 view .LVU1061
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3155              		.loc 1 1847 17 is_stmt 0 view .LVU1062
 3156 007e 46F40076 		orr	r6, r6, #512
 3157              	.LVL209:
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3158              		.loc 1 1850 7 is_stmt 1 view .LVU1063
 3159 0082 2368     		ldr	r3, [r4]
 3160 0084 1022     		movs	r2, #16
 3161 0086 DA60     		str	r2, [r3, #12]
 3162              	.L245:
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3163              		.loc 1 1855 3 view .LVU1064
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3164              		.loc 1 1855 6 is_stmt 0 view .LVU1065
 3165 0088 15F0040F 		tst	r5, #4
 3166 008c 08D0     		beq	.L246
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3167              		.loc 1 1857 5 is_stmt 1 view .LVU1066
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3168              		.loc 1 1857 8 is_stmt 0 view .LVU1067
 3169 008e 1BF0080F 		tst	fp, #8
 3170 0092 05D0     		beq	.L246
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3171              		.loc 1 1860 7 is_stmt 1 view .LVU1068
 3172 0094 2368     		ldr	r3, [r4]
 3173 0096 0822     		movs	r2, #8
 3174 0098 DA60     		str	r2, [r3, #12]
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3175              		.loc 1 1865 7 view .LVU1069
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3176              		.loc 1 1865 11 is_stmt 0 view .LVU1070
 3177 009a 636C     		ldr	r3, [r4, #68]
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3178              		.loc 1 1865 7 view .LVU1071
 3179 009c 2046     		mov	r0, r4
 3180 009e 9847     		blx	r3
 3181              	.LVL210:
 3182              	.L246:
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3183              		.loc 1 1874 3 is_stmt 1 view .LVU1072
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3184              		.loc 1 1874 6 is_stmt 0 view .LVU1073
 3185 00a0 15F0020F 		tst	r5, #2
 3186 00a4 07D0     		beq	.L247
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3187              		.loc 1 1877 5 is_stmt 1 view .LVU1074
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3188              		.loc 1 1877 14 is_stmt 0 view .LVU1075
 3189 00a6 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 132


1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3190              		.loc 1 1877 24 view .LVU1076
 3191 00a8 DB68     		ldr	r3, [r3, #12]
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3192              		.loc 1 1877 8 view .LVU1077
 3193 00aa 13F0030F 		tst	r3, #3
 3194 00ae 02D0     		beq	.L247
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3195              		.loc 1 1882 7 is_stmt 1 view .LVU1078
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3196              		.loc 1 1882 11 is_stmt 0 view .LVU1079
 3197 00b0 236C     		ldr	r3, [r4, #64]
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3198              		.loc 1 1882 7 view .LVU1080
 3199 00b2 2046     		mov	r0, r4
 3200 00b4 9847     		blx	r3
 3201              	.LVL211:
 3202              	.L247:
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3203              		.loc 1 1891 3 is_stmt 1 view .LVU1081
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3204              		.loc 1 1891 6 is_stmt 0 view .LVU1082
 3205 00b6 15F0400F 		tst	r5, #64
 3206 00ba 07D0     		beq	.L248
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3207              		.loc 1 1893 5 is_stmt 1 view .LVU1083
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3208              		.loc 1 1893 8 is_stmt 0 view .LVU1084
 3209 00bc 1AF0100F 		tst	r10, #16
 3210 00c0 04D0     		beq	.L248
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3211              		.loc 1 1896 7 is_stmt 1 view .LVU1085
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3212              		.loc 1 1896 17 is_stmt 0 view .LVU1086
 3213 00c2 46F48066 		orr	r6, r6, #1024
 3214              	.LVL212:
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3215              		.loc 1 1899 7 is_stmt 1 view .LVU1087
 3216 00c6 2368     		ldr	r3, [r4]
 3217 00c8 1022     		movs	r2, #16
 3218 00ca 1A61     		str	r2, [r3, #16]
 3219              	.L248:
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3220              		.loc 1 1904 3 view .LVU1088
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3221              		.loc 1 1904 6 is_stmt 0 view .LVU1089
 3222 00cc 15F0200F 		tst	r5, #32
 3223 00d0 08D0     		beq	.L249
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3224              		.loc 1 1906 5 is_stmt 1 view .LVU1090
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3225              		.loc 1 1906 8 is_stmt 0 view .LVU1091
 3226 00d2 1AF0080F 		tst	r10, #8
 3227 00d6 05D0     		beq	.L249
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3228              		.loc 1 1909 7 is_stmt 1 view .LVU1092
 3229 00d8 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 133


 3230 00da 0822     		movs	r2, #8
 3231 00dc 1A61     		str	r2, [r3, #16]
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3232              		.loc 1 1914 7 view .LVU1093
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3233              		.loc 1 1914 11 is_stmt 0 view .LVU1094
 3234 00de E36C     		ldr	r3, [r4, #76]
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3235              		.loc 1 1914 7 view .LVU1095
 3236 00e0 2046     		mov	r0, r4
 3237 00e2 9847     		blx	r3
 3238              	.LVL213:
 3239              	.L249:
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3240              		.loc 1 1923 3 is_stmt 1 view .LVU1096
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3241              		.loc 1 1923 6 is_stmt 0 view .LVU1097
 3242 00e4 15F0100F 		tst	r5, #16
 3243 00e8 07D0     		beq	.L250
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3244              		.loc 1 1926 5 is_stmt 1 view .LVU1098
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3245              		.loc 1 1926 14 is_stmt 0 view .LVU1099
 3246 00ea 2368     		ldr	r3, [r4]
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3247              		.loc 1 1926 24 view .LVU1100
 3248 00ec 1B69     		ldr	r3, [r3, #16]
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3249              		.loc 1 1926 8 view .LVU1101
 3250 00ee 13F0030F 		tst	r3, #3
 3251 00f2 02D0     		beq	.L250
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3252              		.loc 1 1931 7 is_stmt 1 view .LVU1102
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3253              		.loc 1 1931 11 is_stmt 0 view .LVU1103
 3254 00f4 A36C     		ldr	r3, [r4, #72]
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3255              		.loc 1 1931 7 view .LVU1104
 3256 00f6 2046     		mov	r0, r4
 3257 00f8 9847     		blx	r3
 3258              	.LVL214:
 3259              	.L250:
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3260              		.loc 1 1940 3 is_stmt 1 view .LVU1105
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3261              		.loc 1 1940 6 is_stmt 0 view .LVU1106
 3262 00fa 15F4003F 		tst	r5, #131072
 3263 00fe 08D0     		beq	.L251
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3264              		.loc 1 1942 5 is_stmt 1 view .LVU1107
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3265              		.loc 1 1942 8 is_stmt 0 view .LVU1108
 3266 0100 18F0100F 		tst	r8, #16
 3267 0104 05D0     		beq	.L251
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3268              		.loc 1 1945 7 is_stmt 1 view .LVU1109
 3269 0106 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 134


 3270 0108 1022     		movs	r2, #16
 3271 010a 5A60     		str	r2, [r3, #4]
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3272              		.loc 1 1950 7 view .LVU1110
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3273              		.loc 1 1950 11 is_stmt 0 view .LVU1111
 3274 010c 236D     		ldr	r3, [r4, #80]
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3275              		.loc 1 1950 7 view .LVU1112
 3276 010e 2046     		mov	r0, r4
 3277 0110 9847     		blx	r3
 3278              	.LVL215:
 3279              	.L251:
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3280              		.loc 1 1959 3 is_stmt 1 view .LVU1113
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3281              		.loc 1 1959 6 is_stmt 0 view .LVU1114
 3282 0112 15F4803F 		tst	r5, #65536
 3283 0116 08D0     		beq	.L252
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3284              		.loc 1 1961 5 is_stmt 1 view .LVU1115
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3285              		.loc 1 1961 8 is_stmt 0 view .LVU1116
 3286 0118 18F0080F 		tst	r8, #8
 3287 011c 05D0     		beq	.L252
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3288              		.loc 1 1964 7 is_stmt 1 view .LVU1117
 3289 011e 2368     		ldr	r3, [r4]
 3290 0120 0822     		movs	r2, #8
 3291 0122 5A60     		str	r2, [r3, #4]
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3292              		.loc 1 1969 7 view .LVU1118
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3293              		.loc 1 1969 11 is_stmt 0 view .LVU1119
 3294 0124 636D     		ldr	r3, [r4, #84]
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3295              		.loc 1 1969 7 view .LVU1120
 3296 0126 2046     		mov	r0, r4
 3297 0128 9847     		blx	r3
 3298              	.LVL216:
 3299              	.L252:
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3300              		.loc 1 1978 3 is_stmt 1 view .LVU1121
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3301              		.loc 1 1978 6 is_stmt 0 view .LVU1122
 3302 012a 15F4004F 		tst	r5, #32768
 3303 012e 69D0     		beq	.L253
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3304              		.loc 1 1980 5 is_stmt 1 view .LVU1123
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3305              		.loc 1 1980 8 is_stmt 0 view .LVU1124
 3306 0130 18F0040F 		tst	r8, #4
 3307 0134 63D0     		beq	.L254
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3308              		.loc 1 1983 7 is_stmt 1 view .LVU1125
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3309              		.loc 1 1983 10 is_stmt 0 view .LVU1126
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 135


 3310 0136 15F4807F 		tst	r5, #256
 3311 013a 04D0     		beq	.L255
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3312              		.loc 1 1983 55 discriminator 1 view .LVU1127
 3313 013c 19F0010F 		tst	r9, #1
 3314 0140 01D0     		beq	.L255
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3315              		.loc 1 1987 9 is_stmt 1 view .LVU1128
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3316              		.loc 1 1987 19 is_stmt 0 view .LVU1129
 3317 0142 46F00106 		orr	r6, r6, #1
 3318              	.LVL217:
 3319              	.L255:
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3320              		.loc 1 1993 7 is_stmt 1 view .LVU1130
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3321              		.loc 1 1993 10 is_stmt 0 view .LVU1131
 3322 0146 15F4007F 		tst	r5, #512
 3323 014a 04D0     		beq	.L256
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3324              		.loc 1 1993 55 discriminator 1 view .LVU1132
 3325 014c 19F0020F 		tst	r9, #2
 3326 0150 01D0     		beq	.L256
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3327              		.loc 1 1997 9 is_stmt 1 view .LVU1133
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3328              		.loc 1 1997 19 is_stmt 0 view .LVU1134
 3329 0152 46F00206 		orr	r6, r6, #2
 3330              	.LVL218:
 3331              	.L256:
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3332              		.loc 1 2003 7 is_stmt 1 view .LVU1135
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3333              		.loc 1 2003 10 is_stmt 0 view .LVU1136
 3334 0156 15F4806F 		tst	r5, #1024
 3335 015a 04D0     		beq	.L257
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3336              		.loc 1 2003 48 discriminator 1 view .LVU1137
 3337 015c 19F0040F 		tst	r9, #4
 3338 0160 01D0     		beq	.L257
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3339              		.loc 1 2007 9 is_stmt 1 view .LVU1138
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3340              		.loc 1 2007 19 is_stmt 0 view .LVU1139
 3341 0162 46F00406 		orr	r6, r6, #4
 3342              	.LVL219:
 3343              	.L257:
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3344              		.loc 1 2013 7 is_stmt 1 view .LVU1140
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3345              		.loc 1 2013 10 is_stmt 0 view .LVU1141
 3346 0166 15F4006F 		tst	r5, #2048
 3347 016a 48D0     		beq	.L254
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3348              		.loc 1 2013 57 discriminator 1 view .LVU1142
 3349 016c 19F07009 		ands	r9, r9, #112
 3350              	.LVL220:
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 136


2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3351              		.loc 1 2013 57 discriminator 1 view .LVU1143
 3352 0170 45D0     		beq	.L254
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3353              		.loc 1 2016 9 is_stmt 1 view .LVU1144
 3354 0172 B9F1400F 		cmp	r9, #64
 3355 0176 5AD0     		beq	.L258
 3356 0178 4DD8     		bhi	.L259
 3357 017a B9F1200F 		cmp	r9, #32
 3358 017e 53D0     		beq	.L260
 3359 0180 B9F1300F 		cmp	r9, #48
 3360 0184 31D1     		bne	.L270
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3361              		.loc 1 2028 13 view .LVU1145
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3362              		.loc 1 2028 23 is_stmt 0 view .LVU1146
 3363 0186 46F02006 		orr	r6, r6, #32
 3364              	.LVL221:
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 3365              		.loc 1 2029 13 is_stmt 1 view .LVU1147
 3366 018a 33E0     		b	.L263
 3367              	.LVL222:
 3368              	.L237:
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3369              		.loc 1 1730 9 view .LVU1148
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3370              		.loc 1 1730 12 is_stmt 0 view .LVU1149
 3371 018c 17F0040F 		tst	r7, #4
 3372 0190 05D1     		bne	.L267
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3373              		.loc 1 1735 14 is_stmt 1 view .LVU1150
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3374              		.loc 1 1735 17 is_stmt 0 view .LVU1151
 3375 0192 17F00806 		ands	r6, r7, #8
 3376 0196 05D1     		bne	.L268
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3377              		.loc 1 1745 11 is_stmt 1 view .LVU1152
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3378              		.loc 1 1745 15 is_stmt 0 view .LVU1153
 3379 0198 436B     		ldr	r3, [r0, #52]
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3380              		.loc 1 1745 11 view .LVU1154
 3381 019a 9847     		blx	r3
 3382              	.LVL223:
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3383              		.loc 1 1745 11 view .LVU1155
 3384 019c 4DE7     		b	.L236
 3385              	.LVL224:
 3386              	.L267:
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3387              		.loc 1 1733 21 view .LVU1156
 3388 019e 4FF40066 		mov	r6, #2048
 3389 01a2 4AE7     		b	.L236
 3390              	.L268:
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3391              		.loc 1 1738 21 view .LVU1157
 3392 01a4 4FF48056 		mov	r6, #4096
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 137


 3393 01a8 47E7     		b	.L236
 3394              	.LVL225:
 3395              	.L239:
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3396              		.loc 1 1773 9 is_stmt 1 view .LVU1158
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3397              		.loc 1 1773 12 is_stmt 0 view .LVU1159
 3398 01aa 17F4806F 		tst	r7, #1024
 3399 01ae 02D0     		beq	.L240
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3400              		.loc 1 1776 11 is_stmt 1 view .LVU1160
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3401              		.loc 1 1776 21 is_stmt 0 view .LVU1161
 3402 01b0 46F40056 		orr	r6, r6, #8192
 3403              	.LVL226:
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3404              		.loc 1 1776 21 view .LVU1162
 3405 01b4 4FE7     		b	.L238
 3406              	.L240:
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3407              		.loc 1 1778 14 is_stmt 1 view .LVU1163
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3408              		.loc 1 1778 17 is_stmt 0 view .LVU1164
 3409 01b6 17F4006F 		tst	r7, #2048
 3410 01ba 02D0     		beq	.L241
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3411              		.loc 1 1781 11 is_stmt 1 view .LVU1165
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3412              		.loc 1 1781 21 is_stmt 0 view .LVU1166
 3413 01bc 46F48046 		orr	r6, r6, #16384
 3414              	.LVL227:
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3415              		.loc 1 1781 21 view .LVU1167
 3416 01c0 49E7     		b	.L238
 3417              	.L241:
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3418              		.loc 1 1788 11 is_stmt 1 view .LVU1168
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3419              		.loc 1 1788 15 is_stmt 0 view .LVU1169
 3420 01c2 A36B     		ldr	r3, [r4, #56]
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3421              		.loc 1 1788 11 view .LVU1170
 3422 01c4 2046     		mov	r0, r4
 3423 01c6 9847     		blx	r3
 3424              	.LVL228:
 3425 01c8 45E7     		b	.L238
 3426              	.L242:
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3427              		.loc 1 1816 9 is_stmt 1 view .LVU1171
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3428              		.loc 1 1816 12 is_stmt 0 view .LVU1172
 3429 01ca 17F4802F 		tst	r7, #262144
 3430 01ce 02D0     		beq	.L243
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3431              		.loc 1 1819 11 is_stmt 1 view .LVU1173
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3432              		.loc 1 1819 21 is_stmt 0 view .LVU1174
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 138


 3433 01d0 46F40046 		orr	r6, r6, #32768
 3434              	.LVL229:
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3435              		.loc 1 1819 21 view .LVU1175
 3436 01d4 4DE7     		b	.L235
 3437              	.L243:
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3438              		.loc 1 1821 14 is_stmt 1 view .LVU1176
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3439              		.loc 1 1821 17 is_stmt 0 view .LVU1177
 3440 01d6 17F4002F 		tst	r7, #524288
 3441 01da 02D0     		beq	.L244
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3442              		.loc 1 1824 11 is_stmt 1 view .LVU1178
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3443              		.loc 1 1824 21 is_stmt 0 view .LVU1179
 3444 01dc 46F48036 		orr	r6, r6, #65536
 3445              	.LVL230:
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3446              		.loc 1 1824 21 view .LVU1180
 3447 01e0 47E7     		b	.L235
 3448              	.L244:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3449              		.loc 1 1831 11 is_stmt 1 view .LVU1181
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3450              		.loc 1 1831 15 is_stmt 0 view .LVU1182
 3451 01e2 E36B     		ldr	r3, [r4, #60]
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3452              		.loc 1 1831 11 view .LVU1183
 3453 01e4 2046     		mov	r0, r4
 3454 01e6 9847     		blx	r3
 3455              	.LVL231:
 3456 01e8 43E7     		b	.L235
 3457              	.LVL232:
 3458              	.L270:
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3459              		.loc 1 2016 9 view .LVU1184
 3460 01ea B9F1100F 		cmp	r9, #16
 3461 01ee 01D1     		bne	.L263
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3462              		.loc 1 2020 13 is_stmt 1 view .LVU1185
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3463              		.loc 1 2020 23 is_stmt 0 view .LVU1186
 3464 01f0 46F00806 		orr	r6, r6, #8
 3465              	.LVL233:
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 3466              		.loc 1 2021 13 is_stmt 1 view .LVU1187
 3467              	.L263:
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 3468              		.loc 1 2047 9 view .LVU1188
 3469 01f4 2268     		ldr	r2, [r4]
 3470 01f6 9369     		ldr	r3, [r2, #24]
 3471 01f8 23F07003 		bic	r3, r3, #112
 3472 01fc 9361     		str	r3, [r2, #24]
 3473              	.L254:
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3474              		.loc 1 2052 5 view .LVU1189
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 139


 3475 01fe 2368     		ldr	r3, [r4]
 3476 0200 0422     		movs	r2, #4
 3477 0202 5A60     		str	r2, [r3, #4]
 3478              	.L253:
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3479              		.loc 1 2056 3 view .LVU1190
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3480              		.loc 1 2056 6 is_stmt 0 view .LVU1191
 3481 0204 2EB1     		cbz	r6, .L234
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3482              		.loc 1 2059 5 is_stmt 1 view .LVU1192
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3483              		.loc 1 2059 9 is_stmt 0 view .LVU1193
 3484 0206 636A     		ldr	r3, [r4, #36]
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3485              		.loc 1 2059 21 view .LVU1194
 3486 0208 3343     		orrs	r3, r3, r6
 3487 020a 6362     		str	r3, [r4, #36]
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3488              		.loc 1 2064 5 is_stmt 1 view .LVU1195
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3489              		.loc 1 2064 9 is_stmt 0 view .LVU1196
 3490 020c A36D     		ldr	r3, [r4, #88]
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3491              		.loc 1 2064 5 view .LVU1197
 3492 020e 2046     		mov	r0, r4
 3493 0210 9847     		blx	r3
 3494              	.LVL234:
 3495              	.L234:
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3496              		.loc 1 2070 1 view .LVU1198
 3497 0212 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3498              	.LVL235:
 3499              	.L259:
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3500              		.loc 1 2016 9 view .LVU1199
 3501 0216 B9F1500F 		cmp	r9, #80
 3502 021a 0BD0     		beq	.L264
 3503 021c B9F1600F 		cmp	r9, #96
 3504 0220 E8D1     		bne	.L263
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3505              		.loc 1 2040 13 is_stmt 1 view .LVU1200
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3506              		.loc 1 2040 23 is_stmt 0 view .LVU1201
 3507 0222 46F48076 		orr	r6, r6, #256
 3508              	.LVL236:
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           default:
 3509              		.loc 1 2041 13 is_stmt 1 view .LVU1202
 3510 0226 E5E7     		b	.L263
 3511              	.L260:
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3512              		.loc 1 2024 13 view .LVU1203
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3513              		.loc 1 2024 23 is_stmt 0 view .LVU1204
 3514 0228 46F01006 		orr	r6, r6, #16
 3515              	.LVL237:
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 140


 3516              		.loc 1 2025 13 is_stmt 1 view .LVU1205
 3517 022c E2E7     		b	.L263
 3518              	.L258:
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3519              		.loc 1 2032 13 view .LVU1206
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3520              		.loc 1 2032 23 is_stmt 0 view .LVU1207
 3521 022e 46F04006 		orr	r6, r6, #64
 3522              	.LVL238:
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 3523              		.loc 1 2033 13 is_stmt 1 view .LVU1208
 3524 0232 DFE7     		b	.L263
 3525              	.L264:
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3526              		.loc 1 2036 13 view .LVU1209
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3527              		.loc 1 2036 23 is_stmt 0 view .LVU1210
 3528 0234 46F08006 		orr	r6, r6, #128
 3529              	.LVL239:
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 3530              		.loc 1 2037 13 is_stmt 1 view .LVU1211
 3531 0238 DCE7     		b	.L263
 3532              		.cfi_endproc
 3533              	.LFE86:
 3535              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 3536              		.align	1
 3537              		.global	HAL_CAN_GetState
 3538              		.syntax unified
 3539              		.thumb
 3540              		.thumb_func
 3542              	HAL_CAN_GetState:
 3543              	.LVL240:
 3544              	.LFB100:
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides functions allowing to :
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN state.
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 141


2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL state
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 3545              		.loc 1 2350 1 view -0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 0
 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 3549              		@ link register save eliminated.
 3550              		.loc 1 2350 1 is_stmt 0 view .LVU1213
 3551 0000 0246     		mov	r2, r0
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3552              		.loc 1 2351 3 is_stmt 1 view .LVU1214
 3553              		.loc 1 2351 24 is_stmt 0 view .LVU1215
 3554 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3555 0006 D8B2     		uxtb	r0, r3
 3556              	.LVL241:
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3557              		.loc 1 2353 3 is_stmt 1 view .LVU1216
 3558              		.loc 1 2353 38 is_stmt 0 view .LVU1217
 3559 0008 013B     		subs	r3, r3, #1
 3560 000a DBB2     		uxtb	r3, r3
 3561              		.loc 1 2353 6 view .LVU1218
 3562 000c 012B     		cmp	r3, #1
 3563 000e 00D9     		bls	.L275
 3564              	.LVL242:
 3565              	.L272:
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Sleep mode is active */
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check sleep mode request flag */
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Sleep mode request is pending */
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3566              		.loc 1 2371 5 is_stmt 1 view .LVU1219
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return state;
 3567              		.loc 1 2375 3 view .LVU1220
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 3568              		.loc 1 2376 1 is_stmt 0 view .LVU1221
 3569 0010 7047     		bx	lr
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 142


 3570              	.LVL243:
 3571              	.L275:
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3572              		.loc 1 2357 5 is_stmt 1 view .LVU1222
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3573              		.loc 1 2357 14 is_stmt 0 view .LVU1223
 3574 0012 1368     		ldr	r3, [r2]
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3575              		.loc 1 2357 24 view .LVU1224
 3576 0014 5A68     		ldr	r2, [r3, #4]
 3577              	.LVL244:
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3578              		.loc 1 2357 8 view .LVU1225
 3579 0016 12F0020F 		tst	r2, #2
 3580 001a 05D1     		bne	.L273
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3581              		.loc 1 2363 10 is_stmt 1 view .LVU1226
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3582              		.loc 1 2363 29 is_stmt 0 view .LVU1227
 3583 001c 1B68     		ldr	r3, [r3]
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3584              		.loc 1 2363 13 view .LVU1228
 3585 001e 13F0020F 		tst	r3, #2
 3586 0022 F5D0     		beq	.L272
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3587              		.loc 1 2366 13 view .LVU1229
 3588 0024 0320     		movs	r0, #3
 3589              	.LVL245:
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3590              		.loc 1 2366 13 view .LVU1230
 3591 0026 F3E7     		b	.L272
 3592              	.LVL246:
 3593              	.L273:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3594              		.loc 1 2360 13 view .LVU1231
 3595 0028 0420     		movs	r0, #4
 3596              	.LVL247:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3597              		.loc 1 2360 13 view .LVU1232
 3598 002a 7047     		bx	lr
 3599              		.cfi_endproc
 3600              	.LFE100:
 3602              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 3603              		.align	1
 3604              		.global	HAL_CAN_GetError
 3605              		.syntax unified
 3606              		.thumb
 3607              		.thumb_func
 3609              	HAL_CAN_GetError:
 3610              	.LVL248:
 3611              	.LFB101:
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN error code.
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval CAN Error Code
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 143


2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 3612              		.loc 1 2385 1 is_stmt 1 view -0
 3613              		.cfi_startproc
 3614              		@ args = 0, pretend = 0, frame = 0
 3615              		@ frame_needed = 0, uses_anonymous_args = 0
 3616              		@ link register save eliminated.
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN error code */
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
 3617              		.loc 1 2387 3 view .LVU1234
 3618              		.loc 1 2387 14 is_stmt 0 view .LVU1235
 3619 0000 406A     		ldr	r0, [r0, #36]
 3620              	.LVL249:
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 3621              		.loc 1 2388 1 view .LVU1236
 3622 0002 7047     		bx	lr
 3623              		.cfi_endproc
 3624              	.LFE101:
 3626              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 3627              		.align	1
 3628              		.global	HAL_CAN_ResetError
 3629              		.syntax unified
 3630              		.thumb
 3631              		.thumb_func
 3633              	HAL_CAN_ResetError:
 3634              	.LVL250:
 3635              	.LFB102:
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Reset the CAN error code.
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 3636              		.loc 1 2397 1 is_stmt 1 view -0
 3637              		.cfi_startproc
 3638              		@ args = 0, pretend = 0, frame = 0
 3639              		@ frame_needed = 0, uses_anonymous_args = 0
 3640              		@ link register save eliminated.
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 3641              		.loc 1 2398 3 view .LVU1238
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3642              		.loc 1 2399 3 view .LVU1239
 3643              		.loc 1 2399 24 is_stmt 0 view .LVU1240
 3644 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3645              	.LVL251:
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3646              		.loc 1 2401 3 is_stmt 1 view .LVU1241
 3647              		.loc 1 2401 38 is_stmt 0 view .LVU1242
 3648 0004 013B     		subs	r3, r3, #1
 3649              	.LVL252:
 3650              		.loc 1 2401 38 view .LVU1243
 3651 0006 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 144


 3652              		.loc 1 2401 6 view .LVU1244
 3653 0008 012B     		cmp	r3, #1
 3654 000a 05D9     		bls	.L280
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Reset CAN error code */
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = 0U;
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3655              		.loc 1 2410 5 is_stmt 1 view .LVU1245
 3656              		.loc 1 2410 9 is_stmt 0 view .LVU1246
 3657 000c 436A     		ldr	r3, [r0, #36]
 3658              		.loc 1 2410 21 view .LVU1247
 3659 000e 43F48023 		orr	r3, r3, #262144
 3660 0012 4362     		str	r3, [r0, #36]
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     status = HAL_ERROR;
 3661              		.loc 1 2412 5 is_stmt 1 view .LVU1248
 3662              	.LVL253:
 3663              		.loc 1 2412 12 is_stmt 0 view .LVU1249
 3664 0014 0120     		movs	r0, #1
 3665              	.LVL254:
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return the status */
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
 3666              		.loc 1 2416 3 is_stmt 1 view .LVU1250
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 3667              		.loc 1 2417 1 is_stmt 0 view .LVU1251
 3668 0016 7047     		bx	lr
 3669              	.LVL255:
 3670              	.L280:
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3671              		.loc 1 2405 5 is_stmt 1 view .LVU1252
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3672              		.loc 1 2405 21 is_stmt 0 view .LVU1253
 3673 0018 0023     		movs	r3, #0
 3674 001a 4362     		str	r3, [r0, #36]
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3675              		.loc 1 2398 21 view .LVU1254
 3676 001c 1846     		mov	r0, r3
 3677              	.LVL256:
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3678              		.loc 1 2398 21 view .LVU1255
 3679 001e 7047     		bx	lr
 3680              		.cfi_endproc
 3681              	.LFE102:
 3683              		.text
 3684              	.Letext0:
 3685              		.file 3 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 3686              		.file 4 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 3687              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3688              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3689              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 145


 3690              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 3691              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 146


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_can.c
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:19     .text.HAL_CAN_MspInit:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:25     .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:40     .text.HAL_CAN_MspDeInit:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:46     .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:61     .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:67     .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:82     .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:88     .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:103    .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:109    .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:124    .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:130    .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:145    .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:151    .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:166    .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:172    .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:187    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:193    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:208    .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:214    .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:229    .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:235    .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:250    .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:256    .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:271    .text.HAL_CAN_SleepCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:277    .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:292    .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:298    .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:313    .text.HAL_CAN_ErrorCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:319    .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:334    .text.HAL_CAN_Init:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:340    .text.HAL_CAN_Init:00000000 HAL_CAN_Init
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:697    .text.HAL_CAN_Init:0000018c $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:715    .text.HAL_CAN_RegisterCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:721    .text.HAL_CAN_RegisterCallback:00000000 HAL_CAN_RegisterCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:806    .text.HAL_CAN_RegisterCallback:00000046 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1006   .text.HAL_CAN_UnRegisterCallback:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1012   .text.HAL_CAN_UnRegisterCallback:00000000 HAL_CAN_UnRegisterCallback
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1064   .text.HAL_CAN_UnRegisterCallback:00000034 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1274   .text.HAL_CAN_UnRegisterCallback:000000e0 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1293   .text.HAL_CAN_ConfigFilter:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1299   .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1506   .text.HAL_CAN_Start:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1512   .text.HAL_CAN_Start:00000000 HAL_CAN_Start
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1612   .text.HAL_CAN_Stop:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1618   .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1719   .text.HAL_CAN_DeInit:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1725   .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1796   .text.HAL_CAN_DeInit:00000034 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1801   .text.HAL_CAN_RequestSleep:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1807   .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1857   .text.HAL_CAN_WakeUp:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1863   .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1962   .text.HAL_CAN_WakeUp:00000054 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1967   .text.HAL_CAN_IsSleepActive:00000000 $t
ARM GAS  /var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s 			page 147


/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1973   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2023   .text.HAL_CAN_AddTxMessage:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2029   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2225   .text.HAL_CAN_AbortTxRequest:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2231   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2307   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2313   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2384   .text.HAL_CAN_IsTxMessagePending:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2390   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2447   .text.HAL_CAN_GetTxTimestamp:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2453   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2526   .text.HAL_CAN_GetRxMessage:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2532   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2843   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2849   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2911   .text.HAL_CAN_ActivateNotification:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2917   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2968   .text.HAL_CAN_DeactivateNotification:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:2974   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3025   .text.HAL_CAN_IRQHandler:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3031   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3536   .text.HAL_CAN_GetState:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3542   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3603   .text.HAL_CAN_GetError:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3609   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3627   .text.HAL_CAN_ResetError:00000000 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:3633   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:821    .text.HAL_CAN_RegisterCallback:00000055 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:821    .text.HAL_CAN_RegisterCallback:00000056 $t
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1079   .text.HAL_CAN_UnRegisterCallback:00000043 $d
/var/folders/vs/j2g7j5tn4zl844ys43q9j5sm0000gn/T//ccJrmuQk.s:1079   .text.HAL_CAN_UnRegisterCallback:00000044 $t

UNDEFINED SYMBOLS
HAL_GetTick
